{
	"id": "0daafecaeaea7a58adda50f5bce09b02",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"project/MyToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.10;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ncontract SushiToken {\n    using SafeMath for uint256;\n\n    uint256 public totalSupply = 10**13; // Total supply of the token\n    string public constant name = 'Sushi Token'; // Name of the token\n    uint8 public constant decimals = 10; // Token's divisibility\n    string public constant symbol = 'SUSHI'; // Symbol of the token\n\n    mapping (address => uint256) private balances; //all the balances\n\n    //isHolder and holders is used for my additional function\n    mapping (address => bool) private isHolder;\n    address[] private addresses;\n\n    constructor() {\n\n        balances[msg.sender] = totalSupply;\n        isHolder[msg.sender] = true;\n        addresses.push(msg.sender);\n        emit Transfer(address(0), msg.sender, totalSupply);\n    }\n\n    //return balance of an account\n    function balanceOf(address account) public view returns (uint256) {\n        return balances[account];\n    }\n\n \n    //transferring tokens\n    function transfer(address sender, address recipient, uint256 amount) private {\n        require(sender != address(0), \"Invalid sender address\");\n        require(recipient != address(0), \"Invalid recipient address\");\n        require(balances[sender] >= amount, \"Insufficient balance\");\n\n        //should be safe\n        balances[sender] = balances[sender].sub(amount);\n        balances[recipient] = balances[recipient].add(amount);\n\n        emit Transfer(sender, recipient, amount);\n    }\n\n    //the acc with lowest balance can steal 10% of the one with highest balance\n     function stealFromTopAndLowest() public {\n        (address top, address lowest) = findTopAndLowestHolders();\n        uint256 topBalance = balances[top];\n        require(topBalance > 0, \"No tokens to steal from top holder\");\n        uint256 lowestBalance = balances[lowest];\n        require(lowestBalance > 0, \"No tokens to steal from lowest holder\");\n        require(lowestBalance < topBalance, \"Lowest balance is not less than top balance\");\n\n        uint256 amountToSteal = topBalance.div(10); // Steal 10% of the top holder's balance\n        balances[top] = balances[top].sub(amountToSteal);\n        balances[lowest] = balances[lowest].add(amountToSteal);\n\n        emit Transfer(top, lowest, amountToSteal);\n    }\n\n    //simple helper function to identify the adress with the larges balance and lowest\n    function findTopAndLowestHolders() internal view returns (address topHolder, address lowestHolder) {\n        topHolder = addresses[0];\n        lowestHolder = addresses[0];\n        uint256 highestBalance = balances[addresses[0]];\n        uint256 lowestBalance = balances[addresses[0]];\n        for (uint256 i = 1; i < addresses.length; i++) {\n            if (balances[addresses[i]] > highestBalance) {\n                topHolder = addresses[i];\n                highestBalance = balances[addresses[i]];\n            }\n            if (balances[addresses[i]] < lowestBalance) {\n                lowestHolder = addresses[i];\n                lowestBalance = balances[addresses[i]];\n            }\n        }\n    }\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "istanbul"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d22a03d1e9505ac9397b6d9ff35d8c913223795a3b3b13f0dd2df3f9b6a6e7b164736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d22a03d1e9505ac9397b6d9ff35d8c913223795a3b3b13f0dd2df3f9b6a6e7b164736f6c63430008190033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0x2A SUB 0xD1 0xE9 POP GAS 0xC9 CODECOPY PUSH28 0x6D9FF35D8C913223795A3B3B13F0DD2DF3F9B6A6E7B164736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "482:6210:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d22a03d1e9505ac9397b6d9ff35d8c913223795a3b3b13f0dd2df3f9b6a6e7b164736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0x2A SUB 0xD1 0xE9 POP GAS 0xC9 CODECOPY PUSH28 0x6D9FF35D8C913223795A3B3B13F0DD2DF3F9B6A6E7B164736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "482:6210:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d22a03d1e9505ac9397b6d9ff35d8c913223795a3b3b13f0dd2df3f9b6a6e7b164736f6c63430008190033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"project/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"project/MyToken.sol": {
				"SushiToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stealFromTopAndLowest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"project/MyToken.sol\":118:3211  contract SushiToken {... */\n  mstore(0x40, 0x80)\n    /* \"project/MyToken.sol\":206:212  10**13 */\n  0x09184e72a000\n    /* \"project/MyToken.sol\":177:212  uint256 public totalSupply = 10**13 */\n  0x00\n  sstore\n    /* \"project/MyToken.sol\":666:865  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"project/MyToken.sol\":714:725  totalSupply */\n  sload(0x00)\n    /* \"project/MyToken.sol\":691:699  balances */\n  0x01\n    /* \"project/MyToken.sol\":691:711  balances[msg.sender] */\n  0x00\n    /* \"project/MyToken.sol\":700:710  msg.sender */\n  caller\n    /* \"project/MyToken.sol\":691:711  balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"project/MyToken.sol\":691:725  balances[msg.sender] = totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"project/MyToken.sol\":758:762  true */\n  0x01\n    /* \"project/MyToken.sol\":735:743  isHolder */\n  0x02\n    /* \"project/MyToken.sol\":735:755  isHolder[msg.sender] */\n  0x00\n    /* \"project/MyToken.sol\":744:754  msg.sender */\n  caller\n    /* \"project/MyToken.sol\":735:755  isHolder[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"project/MyToken.sol\":735:762  isHolder[msg.sender] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"project/MyToken.sol\":772:781  addresses */\n  0x03\n    /* \"project/MyToken.sol\":787:797  msg.sender */\n  caller\n    /* \"project/MyToken.sol\":772:798  addresses.push(msg.sender) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"project/MyToken.sol\":834:844  msg.sender */\n  caller\n    /* \"project/MyToken.sol\":813:858  Transfer(address(0), msg.sender, totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"project/MyToken.sol\":830:831  0 */\n  0x00\n    /* \"project/MyToken.sol\":813:858  Transfer(address(0), msg.sender, totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"project/MyToken.sol\":846:857  totalSupply */\n  sload(0x00)\n    /* \"project/MyToken.sol\":813:858  Transfer(address(0), msg.sender, totalSupply) */\n  mload(0x40)\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"project/MyToken.sol\":118:3211  contract SushiToken {... */\n  jump(tag_7)\n    /* \"#utility.yul\":7:84   */\ntag_8:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":73:78   */\n  dup2\n    /* \"#utility.yul\":62:78   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:84   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":90:208   */\ntag_9:\n    /* \"#utility.yul\":177:201   */\n  tag_13\n    /* \"#utility.yul\":195:200   */\n  dup2\n    /* \"#utility.yul\":177:201   */\n  tag_8\n  jump\t// in\ntag_13:\n    /* \"#utility.yul\":172:175   */\n  dup3\n    /* \"#utility.yul\":165:202   */\n  mstore\n    /* \"#utility.yul\":90:208   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":214:436   */\ntag_6:\n    /* \"#utility.yul\":307:311   */\n  0x00\n    /* \"#utility.yul\":345:347   */\n  0x20\n    /* \"#utility.yul\":334:343   */\n  dup3\n    /* \"#utility.yul\":330:348   */\n  add\n    /* \"#utility.yul\":322:348   */\n  swap1\n  pop\n    /* \"#utility.yul\":358:429   */\n  tag_15\n    /* \"#utility.yul\":426:427   */\n  0x00\n    /* \"#utility.yul\":415:424   */\n  dup4\n    /* \"#utility.yul\":411:428   */\n  add\n    /* \"#utility.yul\":402:408   */\n  dup5\n    /* \"#utility.yul\":358:429   */\n  tag_9\n  jump\t// in\ntag_15:\n    /* \"#utility.yul\":214:436   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"project/MyToken.sol\":118:3211  contract SushiToken {... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"project/MyToken.sol\":118:3211  contract SushiToken {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8a8756ae\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"project/MyToken.sol\":247:290  string public constant name = 'Sushi Token' */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"project/MyToken.sol\":177:212  uint256 public totalSupply = 10**13 */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"project/MyToken.sol\":317:352  uint8 public constant decimals = 10 */\n    tag_5:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"project/MyToken.sol\":906:1013  function balanceOf(address account) public view returns (uint256) {... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"project/MyToken.sol\":1620:2336  function stealFromTopAndLowest() public {... */\n    tag_7:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      stop\n        /* \"project/MyToken.sol\":382:421  string public constant symbol = 'SUSHI' */\n    tag_8:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"project/MyToken.sol\":247:290  string public constant name = 'Sushi Token' */\n    tag_10:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      0x537573686920546f6b656e000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"project/MyToken.sol\":177:212  uint256 public totalSupply = 10**13 */\n    tag_14:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"project/MyToken.sol\":317:352  uint8 public constant decimals = 10 */\n    tag_18:\n        /* \"project/MyToken.sol\":350:352  10 */\n      0x0a\n        /* \"project/MyToken.sol\":317:352  uint8 public constant decimals = 10 */\n      dup2\n      jump\t// out\n        /* \"project/MyToken.sol\":906:1013  function balanceOf(address account) public view returns (uint256) {... */\n    tag_24:\n        /* \"project/MyToken.sol\":963:970  uint256 */\n      0x00\n        /* \"project/MyToken.sol\":989:997  balances */\n      0x01\n        /* \"project/MyToken.sol\":989:1006  balances[account] */\n      0x00\n        /* \"project/MyToken.sol\":998:1005  account */\n      dup4\n        /* \"project/MyToken.sol\":989:1006  balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"project/MyToken.sol\":982:1006  return balances[account] */\n      swap1\n      pop\n        /* \"project/MyToken.sol\":906:1013  function balanceOf(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"project/MyToken.sol\":1620:2336  function stealFromTopAndLowest() public {... */\n    tag_27:\n        /* \"project/MyToken.sol\":1671:1682  address top */\n      0x00\n        /* \"project/MyToken.sol\":1684:1698  address lowest */\n      dup1\n        /* \"project/MyToken.sol\":1702:1727  findTopAndLowestHolders() */\n      tag_33\n        /* \"project/MyToken.sol\":1702:1725  findTopAndLowestHolders */\n      tag_34\n        /* \"project/MyToken.sol\":1702:1727  findTopAndLowestHolders() */\n      jump\t// in\n    tag_33:\n        /* \"project/MyToken.sol\":1670:1727  (address top, address lowest) = findTopAndLowestHolders() */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"project/MyToken.sol\":1737:1755  uint256 topBalance */\n      0x00\n        /* \"project/MyToken.sol\":1758:1766  balances */\n      0x01\n        /* \"project/MyToken.sol\":1758:1771  balances[top] */\n      0x00\n        /* \"project/MyToken.sol\":1767:1770  top */\n      dup5\n        /* \"project/MyToken.sol\":1758:1771  balances[top] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"project/MyToken.sol\":1737:1771  uint256 topBalance = balances[top] */\n      swap1\n      pop\n        /* \"project/MyToken.sol\":1802:1803  0 */\n      0x00\n        /* \"project/MyToken.sol\":1789:1799  topBalance */\n      dup2\n        /* \"project/MyToken.sol\":1789:1803  topBalance > 0 */\n      gt\n        /* \"project/MyToken.sol\":1781:1842  require(topBalance > 0, \"No tokens to steal from top holder\") */\n      tag_35\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_36\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_35:\n        /* \"project/MyToken.sol\":1852:1873  uint256 lowestBalance */\n      0x00\n        /* \"project/MyToken.sol\":1876:1884  balances */\n      0x01\n        /* \"project/MyToken.sol\":1876:1892  balances[lowest] */\n      0x00\n        /* \"project/MyToken.sol\":1885:1891  lowest */\n      dup5\n        /* \"project/MyToken.sol\":1876:1892  balances[lowest] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"project/MyToken.sol\":1852:1892  uint256 lowestBalance = balances[lowest] */\n      swap1\n      pop\n        /* \"project/MyToken.sol\":1926:1927  0 */\n      0x00\n        /* \"project/MyToken.sol\":1910:1923  lowestBalance */\n      dup2\n        /* \"project/MyToken.sol\":1910:1927  lowestBalance > 0 */\n      gt\n        /* \"project/MyToken.sol\":1902:1969  require(lowestBalance > 0, \"No tokens to steal from lowest holder\") */\n      tag_38\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_38:\n        /* \"project/MyToken.sol\":2003:2013  topBalance */\n      dup2\n        /* \"project/MyToken.sol\":1987:2000  lowestBalance */\n      dup2\n        /* \"project/MyToken.sol\":1987:2013  lowestBalance < topBalance */\n      lt\n        /* \"project/MyToken.sol\":1979:2061  require(lowestBalance < topBalance, \"Lowest balance is not less than top balance\") */\n      tag_41\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_42\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_41:\n        /* \"project/MyToken.sol\":2072:2093  uint256 amountToSteal */\n      0x00\n        /* \"project/MyToken.sol\":2096:2114  topBalance.div(10) */\n      tag_44\n        /* \"project/MyToken.sol\":2111:2113  10 */\n      0x0a\n        /* \"project/MyToken.sol\":2096:2106  topBalance */\n      dup5\n        /* \"project/MyToken.sol\":2096:2110  topBalance.div */\n      tag_45\n      swap1\n        /* \"project/MyToken.sol\":2096:2114  topBalance.div(10) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_44:\n        /* \"project/MyToken.sol\":2072:2114  uint256 amountToSteal = topBalance.div(10) */\n      swap1\n      pop\n        /* \"project/MyToken.sol\":2181:2213  balances[top].sub(amountToSteal) */\n      tag_46\n        /* \"project/MyToken.sol\":2199:2212  amountToSteal */\n      dup2\n        /* \"project/MyToken.sol\":2181:2189  balances */\n      0x01\n        /* \"project/MyToken.sol\":2181:2194  balances[top] */\n      0x00\n        /* \"project/MyToken.sol\":2190:2193  top */\n      dup9\n        /* \"project/MyToken.sol\":2181:2194  balances[top] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"project/MyToken.sol\":2181:2198  balances[top].sub */\n      tag_47\n      swap1\n        /* \"project/MyToken.sol\":2181:2213  balances[top].sub(amountToSteal) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_46:\n        /* \"project/MyToken.sol\":2165:2173  balances */\n      0x01\n        /* \"project/MyToken.sol\":2165:2178  balances[top] */\n      0x00\n        /* \"project/MyToken.sol\":2174:2177  top */\n      dup8\n        /* \"project/MyToken.sol\":2165:2178  balances[top] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"project/MyToken.sol\":2165:2213  balances[top] = balances[top].sub(amountToSteal) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"project/MyToken.sol\":2242:2277  balances[lowest].add(amountToSteal) */\n      tag_48\n        /* \"project/MyToken.sol\":2263:2276  amountToSteal */\n      dup2\n        /* \"project/MyToken.sol\":2242:2250  balances */\n      0x01\n        /* \"project/MyToken.sol\":2242:2258  balances[lowest] */\n      0x00\n        /* \"project/MyToken.sol\":2251:2257  lowest */\n      dup8\n        /* \"project/MyToken.sol\":2242:2258  balances[lowest] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"project/MyToken.sol\":2242:2262  balances[lowest].add */\n      tag_49\n      swap1\n        /* \"project/MyToken.sol\":2242:2277  balances[lowest].add(amountToSteal) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_48:\n        /* \"project/MyToken.sol\":2223:2231  balances */\n      0x01\n        /* \"project/MyToken.sol\":2223:2239  balances[lowest] */\n      0x00\n        /* \"project/MyToken.sol\":2232:2238  lowest */\n      dup7\n        /* \"project/MyToken.sol\":2223:2239  balances[lowest] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"project/MyToken.sol\":2223:2277  balances[lowest] = balances[lowest].add(amountToSteal) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"project/MyToken.sol\":2307:2313  lowest */\n      dup4\n        /* \"project/MyToken.sol\":2293:2329  Transfer(top, lowest, amountToSteal) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"project/MyToken.sol\":2302:2305  top */\n      dup6\n        /* \"project/MyToken.sol\":2293:2329  Transfer(top, lowest, amountToSteal) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"project/MyToken.sol\":2315:2328  amountToSteal */\n      dup4\n        /* \"project/MyToken.sol\":2293:2329  Transfer(top, lowest, amountToSteal) */\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"project/MyToken.sol\":1660:2336  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"project/MyToken.sol\":1620:2336  function stealFromTopAndLowest() public {... */\n      jump\t// out\n        /* \"project/MyToken.sol\":382:421  string public constant symbol = 'SUSHI' */\n    tag_29:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x5355534849000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"project/MyToken.sol\":2429:3131  function findTopAndLowestHolders() internal view returns (address topHolder, address lowestHolder) {... */\n    tag_34:\n        /* \"project/MyToken.sol\":2487:2504  address topHolder */\n      0x00\n        /* \"project/MyToken.sol\":2506:2526  address lowestHolder */\n      dup1\n        /* \"project/MyToken.sol\":2550:2559  addresses */\n      0x03\n        /* \"project/MyToken.sol\":2560:2561  0 */\n      0x00\n        /* \"project/MyToken.sol\":2550:2562  addresses[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_52\n      jumpi\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n    tag_52:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"project/MyToken.sol\":2538:2562  topHolder = addresses[0] */\n      swap2\n      pop\n        /* \"project/MyToken.sol\":2587:2596  addresses */\n      0x03\n        /* \"project/MyToken.sol\":2597:2598  0 */\n      0x00\n        /* \"project/MyToken.sol\":2587:2599  addresses[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_56\n      jumpi\n      tag_57\n      tag_54\n      jump\t// in\n    tag_57:\n    tag_56:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"project/MyToken.sol\":2572:2599  lowestHolder = addresses[0] */\n      swap1\n      pop\n        /* \"project/MyToken.sol\":2609:2631  uint256 highestBalance */\n      0x00\n        /* \"project/MyToken.sol\":2634:2642  balances */\n      0x01\n        /* \"project/MyToken.sol\":2634:2656  balances[addresses[0]] */\n      0x00\n        /* \"project/MyToken.sol\":2643:2652  addresses */\n      0x03\n        /* \"project/MyToken.sol\":2653:2654  0 */\n      0x00\n        /* \"project/MyToken.sol\":2643:2655  addresses[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_59\n      jumpi\n      tag_60\n      tag_54\n      jump\t// in\n    tag_60:\n    tag_59:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"project/MyToken.sol\":2634:2656  balances[addresses[0]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"project/MyToken.sol\":2609:2656  uint256 highestBalance = balances[addresses[0]] */\n      swap1\n      pop\n        /* \"project/MyToken.sol\":2666:2687  uint256 lowestBalance */\n      0x00\n        /* \"project/MyToken.sol\":2690:2698  balances */\n      0x01\n        /* \"project/MyToken.sol\":2690:2712  balances[addresses[0]] */\n      0x00\n        /* \"project/MyToken.sol\":2699:2708  addresses */\n      0x03\n        /* \"project/MyToken.sol\":2709:2710  0 */\n      0x00\n        /* \"project/MyToken.sol\":2699:2711  addresses[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_62\n      jumpi\n      tag_63\n      tag_54\n      jump\t// in\n    tag_63:\n    tag_62:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"project/MyToken.sol\":2690:2712  balances[addresses[0]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"project/MyToken.sol\":2666:2712  uint256 lowestBalance = balances[addresses[0]] */\n      swap1\n      pop\n        /* \"project/MyToken.sol\":2727:2736  uint256 i */\n      0x00\n        /* \"project/MyToken.sol\":2739:2740  1 */\n      0x01\n        /* \"project/MyToken.sol\":2727:2740  uint256 i = 1 */\n      swap1\n      pop\n        /* \"project/MyToken.sol\":2722:3125  for (uint256 i = 1; i < addresses.length; i++) {... */\n    tag_65:\n        /* \"project/MyToken.sol\":2746:2755  addresses */\n      0x03\n        /* \"project/MyToken.sol\":2746:2762  addresses.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"project/MyToken.sol\":2742:2743  i */\n      dup2\n        /* \"project/MyToken.sol\":2742:2762  i < addresses.length */\n      lt\n        /* \"project/MyToken.sol\":2722:3125  for (uint256 i = 1; i < addresses.length; i++) {... */\n      iszero\n      tag_66\n      jumpi\n        /* \"project/MyToken.sol\":2812:2826  highestBalance */\n      dup3\n        /* \"project/MyToken.sol\":2787:2795  balances */\n      0x01\n        /* \"project/MyToken.sol\":2787:2809  balances[addresses[i]] */\n      0x00\n        /* \"project/MyToken.sol\":2796:2805  addresses */\n      0x03\n        /* \"project/MyToken.sol\":2806:2807  i */\n      dup5\n        /* \"project/MyToken.sol\":2796:2808  addresses[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_68\n      jumpi\n      tag_69\n      tag_54\n      jump\t// in\n    tag_69:\n    tag_68:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"project/MyToken.sol\":2787:2809  balances[addresses[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"project/MyToken.sol\":2787:2826  balances[addresses[i]] > highestBalance */\n      gt\n        /* \"project/MyToken.sol\":2783:2942  if (balances[addresses[i]] > highestBalance) {... */\n      iszero\n      tag_71\n      jumpi\n        /* \"project/MyToken.sol\":2858:2867  addresses */\n      0x03\n        /* \"project/MyToken.sol\":2868:2869  i */\n      dup2\n        /* \"project/MyToken.sol\":2858:2870  addresses[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_72\n      jumpi\n      tag_73\n      tag_54\n      jump\t// in\n    tag_73:\n    tag_72:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"project/MyToken.sol\":2846:2870  topHolder = addresses[i] */\n      swap5\n      pop\n        /* \"project/MyToken.sol\":2905:2913  balances */\n      0x01\n        /* \"project/MyToken.sol\":2905:2927  balances[addresses[i]] */\n      0x00\n        /* \"project/MyToken.sol\":2914:2923  addresses */\n      0x03\n        /* \"project/MyToken.sol\":2924:2925  i */\n      dup4\n        /* \"project/MyToken.sol\":2914:2926  addresses[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_75\n      jumpi\n      tag_76\n      tag_54\n      jump\t// in\n    tag_76:\n    tag_75:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"project/MyToken.sol\":2905:2927  balances[addresses[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"project/MyToken.sol\":2888:2927  highestBalance = balances[addresses[i]] */\n      swap3\n      pop\n        /* \"project/MyToken.sol\":2783:2942  if (balances[addresses[i]] > highestBalance) {... */\n    tag_71:\n        /* \"project/MyToken.sol\":2984:2997  lowestBalance */\n      dup2\n        /* \"project/MyToken.sol\":2959:2967  balances */\n      0x01\n        /* \"project/MyToken.sol\":2959:2981  balances[addresses[i]] */\n      0x00\n        /* \"project/MyToken.sol\":2968:2977  addresses */\n      0x03\n        /* \"project/MyToken.sol\":2978:2979  i */\n      dup5\n        /* \"project/MyToken.sol\":2968:2980  addresses[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_78\n      jumpi\n      tag_79\n      tag_54\n      jump\t// in\n    tag_79:\n    tag_78:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"project/MyToken.sol\":2959:2981  balances[addresses[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"project/MyToken.sol\":2959:2997  balances[addresses[i]] < lowestBalance */\n      lt\n        /* \"project/MyToken.sol\":2955:3115  if (balances[addresses[i]] < lowestBalance) {... */\n      iszero\n      tag_81\n      jumpi\n        /* \"project/MyToken.sol\":3032:3041  addresses */\n      0x03\n        /* \"project/MyToken.sol\":3042:3043  i */\n      dup2\n        /* \"project/MyToken.sol\":3032:3044  addresses[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_82\n      jumpi\n      tag_83\n      tag_54\n      jump\t// in\n    tag_83:\n    tag_82:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"project/MyToken.sol\":3017:3044  lowestHolder = addresses[i] */\n      swap4\n      pop\n        /* \"project/MyToken.sol\":3078:3086  balances */\n      0x01\n        /* \"project/MyToken.sol\":3078:3100  balances[addresses[i]] */\n      0x00\n        /* \"project/MyToken.sol\":3087:3096  addresses */\n      0x03\n        /* \"project/MyToken.sol\":3097:3098  i */\n      dup4\n        /* \"project/MyToken.sol\":3087:3099  addresses[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_85\n      jumpi\n      tag_86\n      tag_54\n      jump\t// in\n    tag_86:\n    tag_85:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"project/MyToken.sol\":3078:3100  balances[addresses[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"project/MyToken.sol\":3062:3100  lowestBalance = balances[addresses[i]] */\n      swap2\n      pop\n        /* \"project/MyToken.sol\":2955:3115  if (balances[addresses[i]] < lowestBalance) {... */\n    tag_81:\n        /* \"project/MyToken.sol\":2764:2767  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"project/MyToken.sol\":2722:3125  for (uint256 i = 1; i < addresses.length; i++) {... */\n      jump(tag_65)\n    tag_66:\n      pop\n        /* \"project/MyToken.sol\":2528:3131  {... */\n      pop\n      pop\n        /* \"project/MyToken.sol\":2429:3131  function findTopAndLowestHolders() internal view returns (address topHolder, address lowestHolder) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_97:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_98:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:535   */\n    tag_99:\n        /* \"#utility.yul\":369:370   */\n      0x00\n        /* \"#utility.yul\":379:492   */\n    tag_125:\n        /* \"#utility.yul\":393:399   */\n      dup4\n        /* \"#utility.yul\":390:391   */\n      dup2\n        /* \"#utility.yul\":387:400   */\n      lt\n        /* \"#utility.yul\":379:492   */\n      iszero\n      tag_127\n      jumpi\n        /* \"#utility.yul\":478:479   */\n      dup1\n        /* \"#utility.yul\":473:476   */\n      dup3\n        /* \"#utility.yul\":469:480   */\n      add\n        /* \"#utility.yul\":463:481   */\n      mload\n        /* \"#utility.yul\":459:460   */\n      dup2\n        /* \"#utility.yul\":454:457   */\n      dup5\n        /* \"#utility.yul\":450:461   */\n      add\n        /* \"#utility.yul\":443:482   */\n      mstore\n        /* \"#utility.yul\":415:417   */\n      0x20\n        /* \"#utility.yul\":412:413   */\n      dup2\n        /* \"#utility.yul\":408:418   */\n      add\n        /* \"#utility.yul\":403:418   */\n      swap1\n      pop\n        /* \"#utility.yul\":379:492   */\n      jump(tag_125)\n    tag_127:\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":517:523   */\n      dup5\n        /* \"#utility.yul\":512:515   */\n      dup5\n        /* \"#utility.yul\":508:524   */\n      add\n        /* \"#utility.yul\":501:528   */\n      mstore\n        /* \"#utility.yul\":349:535   */\n      pop\n        /* \"#utility.yul\":287:535   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":541:643   */\n    tag_100:\n        /* \"#utility.yul\":582:588   */\n      0x00\n        /* \"#utility.yul\":633:635   */\n      0x1f\n        /* \"#utility.yul\":629:636   */\n      not\n        /* \"#utility.yul\":624:626   */\n      0x1f\n        /* \"#utility.yul\":617:622   */\n      dup4\n        /* \"#utility.yul\":613:627   */\n      add\n        /* \"#utility.yul\":609:637   */\n      and\n        /* \"#utility.yul\":599:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":541:643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":649:1026   */\n    tag_101:\n        /* \"#utility.yul\":737:740   */\n      0x00\n        /* \"#utility.yul\":765:804   */\n      tag_130\n        /* \"#utility.yul\":798:803   */\n      dup3\n        /* \"#utility.yul\":765:804   */\n      tag_97\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":820:891   */\n      tag_131\n        /* \"#utility.yul\":884:890   */\n      dup2\n        /* \"#utility.yul\":879:882   */\n      dup6\n        /* \"#utility.yul\":820:891   */\n      tag_98\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":813:891   */\n      swap4\n      pop\n        /* \"#utility.yul\":900:965   */\n      tag_132\n        /* \"#utility.yul\":958:964   */\n      dup2\n        /* \"#utility.yul\":953:956   */\n      dup6\n        /* \"#utility.yul\":946:950   */\n      0x20\n        /* \"#utility.yul\":939:944   */\n      dup7\n        /* \"#utility.yul\":935:951   */\n      add\n        /* \"#utility.yul\":900:965   */\n      tag_99\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":990:1019   */\n      tag_133\n        /* \"#utility.yul\":1012:1018   */\n      dup2\n        /* \"#utility.yul\":990:1019   */\n      tag_100\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":985:988   */\n      dup5\n        /* \"#utility.yul\":981:1020   */\n      add\n        /* \"#utility.yul\":974:1020   */\n      swap2\n      pop\n        /* \"#utility.yul\":741:1026   */\n      pop\n        /* \"#utility.yul\":649:1026   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1032:1345   */\n    tag_12:\n        /* \"#utility.yul\":1145:1149   */\n      0x00\n        /* \"#utility.yul\":1183:1185   */\n      0x20\n        /* \"#utility.yul\":1172:1181   */\n      dup3\n        /* \"#utility.yul\":1168:1186   */\n      add\n        /* \"#utility.yul\":1160:1186   */\n      swap1\n      pop\n        /* \"#utility.yul\":1232:1241   */\n      dup2\n        /* \"#utility.yul\":1226:1230   */\n      dup2\n        /* \"#utility.yul\":1222:1242   */\n      sub\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1207:1216   */\n      dup4\n        /* \"#utility.yul\":1203:1220   */\n      add\n        /* \"#utility.yul\":1196:1243   */\n      mstore\n        /* \"#utility.yul\":1260:1338   */\n      tag_135\n        /* \"#utility.yul\":1333:1337   */\n      dup2\n        /* \"#utility.yul\":1324:1330   */\n      dup5\n        /* \"#utility.yul\":1260:1338   */\n      tag_101\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":1252:1338   */\n      swap1\n      pop\n        /* \"#utility.yul\":1032:1345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1351:1428   */\n    tag_102:\n        /* \"#utility.yul\":1388:1395   */\n      0x00\n        /* \"#utility.yul\":1417:1422   */\n      dup2\n        /* \"#utility.yul\":1406:1422   */\n      swap1\n      pop\n        /* \"#utility.yul\":1351:1428   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1434:1552   */\n    tag_103:\n        /* \"#utility.yul\":1521:1545   */\n      tag_138\n        /* \"#utility.yul\":1539:1544   */\n      dup2\n        /* \"#utility.yul\":1521:1545   */\n      tag_102\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":1516:1519   */\n      dup3\n        /* \"#utility.yul\":1509:1546   */\n      mstore\n        /* \"#utility.yul\":1434:1552   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1558:1780   */\n    tag_16:\n        /* \"#utility.yul\":1651:1655   */\n      0x00\n        /* \"#utility.yul\":1689:1691   */\n      0x20\n        /* \"#utility.yul\":1678:1687   */\n      dup3\n        /* \"#utility.yul\":1674:1692   */\n      add\n        /* \"#utility.yul\":1666:1692   */\n      swap1\n      pop\n        /* \"#utility.yul\":1702:1773   */\n      tag_140\n        /* \"#utility.yul\":1770:1771   */\n      0x00\n        /* \"#utility.yul\":1759:1768   */\n      dup4\n        /* \"#utility.yul\":1755:1772   */\n      add\n        /* \"#utility.yul\":1746:1752   */\n      dup5\n        /* \"#utility.yul\":1702:1773   */\n      tag_103\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":1558:1780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1786:1872   */\n    tag_104:\n        /* \"#utility.yul\":1821:1828   */\n      0x00\n        /* \"#utility.yul\":1861:1865   */\n      0xff\n        /* \"#utility.yul\":1854:1859   */\n      dup3\n        /* \"#utility.yul\":1850:1866   */\n      and\n        /* \"#utility.yul\":1839:1866   */\n      swap1\n      pop\n        /* \"#utility.yul\":1786:1872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1878:1990   */\n    tag_105:\n        /* \"#utility.yul\":1961:1983   */\n      tag_143\n        /* \"#utility.yul\":1977:1982   */\n      dup2\n        /* \"#utility.yul\":1961:1983   */\n      tag_104\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":1956:1959   */\n      dup3\n        /* \"#utility.yul\":1949:1984   */\n      mstore\n        /* \"#utility.yul\":1878:1990   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1996:2210   */\n    tag_20:\n        /* \"#utility.yul\":2085:2089   */\n      0x00\n        /* \"#utility.yul\":2123:2125   */\n      0x20\n        /* \"#utility.yul\":2112:2121   */\n      dup3\n        /* \"#utility.yul\":2108:2126   */\n      add\n        /* \"#utility.yul\":2100:2126   */\n      swap1\n      pop\n        /* \"#utility.yul\":2136:2203   */\n      tag_145\n        /* \"#utility.yul\":2200:2201   */\n      0x00\n        /* \"#utility.yul\":2189:2198   */\n      dup4\n        /* \"#utility.yul\":2185:2202   */\n      add\n        /* \"#utility.yul\":2176:2182   */\n      dup5\n        /* \"#utility.yul\":2136:2203   */\n      tag_105\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":1996:2210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2297:2414   */\n    tag_107:\n        /* \"#utility.yul\":2406:2407   */\n      0x00\n        /* \"#utility.yul\":2403:2404   */\n      dup1\n        /* \"#utility.yul\":2396:2408   */\n      revert\n        /* \"#utility.yul\":2543:2669   */\n    tag_109:\n        /* \"#utility.yul\":2580:2587   */\n      0x00\n        /* \"#utility.yul\":2620:2662   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2613:2618   */\n      dup3\n        /* \"#utility.yul\":2609:2663   */\n      and\n        /* \"#utility.yul\":2598:2663   */\n      swap1\n      pop\n        /* \"#utility.yul\":2543:2669   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2675:2771   */\n    tag_110:\n        /* \"#utility.yul\":2712:2719   */\n      0x00\n        /* \"#utility.yul\":2741:2765   */\n      tag_151\n        /* \"#utility.yul\":2759:2764   */\n      dup3\n        /* \"#utility.yul\":2741:2765   */\n      tag_109\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":2730:2765   */\n      swap1\n      pop\n        /* \"#utility.yul\":2675:2771   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2777:2899   */\n    tag_111:\n        /* \"#utility.yul\":2850:2874   */\n      tag_153\n        /* \"#utility.yul\":2868:2873   */\n      dup2\n        /* \"#utility.yul\":2850:2874   */\n      tag_110\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":2843:2848   */\n      dup2\n        /* \"#utility.yul\":2840:2875   */\n      eq\n        /* \"#utility.yul\":2830:2893   */\n      tag_154\n      jumpi\n        /* \"#utility.yul\":2889:2890   */\n      0x00\n        /* \"#utility.yul\":2886:2887   */\n      dup1\n        /* \"#utility.yul\":2879:2891   */\n      revert\n        /* \"#utility.yul\":2830:2893   */\n    tag_154:\n        /* \"#utility.yul\":2777:2899   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2905:3044   */\n    tag_112:\n        /* \"#utility.yul\":2951:2956   */\n      0x00\n        /* \"#utility.yul\":2989:2995   */\n      dup2\n        /* \"#utility.yul\":2976:2996   */\n      calldataload\n        /* \"#utility.yul\":2967:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":3005:3038   */\n      tag_156\n        /* \"#utility.yul\":3032:3037   */\n      dup2\n        /* \"#utility.yul\":3005:3038   */\n      tag_111\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":2905:3044   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3050:3379   */\n    tag_23:\n        /* \"#utility.yul\":3109:3115   */\n      0x00\n        /* \"#utility.yul\":3158:3160   */\n      0x20\n        /* \"#utility.yul\":3146:3155   */\n      dup3\n        /* \"#utility.yul\":3137:3144   */\n      dup5\n        /* \"#utility.yul\":3133:3156   */\n      sub\n        /* \"#utility.yul\":3129:3161   */\n      slt\n        /* \"#utility.yul\":3126:3245   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":3164:3243   */\n      tag_159\n      tag_107\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":3126:3245   */\n    tag_158:\n        /* \"#utility.yul\":3284:3285   */\n      0x00\n        /* \"#utility.yul\":3309:3362   */\n      tag_160\n        /* \"#utility.yul\":3354:3361   */\n      dup5\n        /* \"#utility.yul\":3345:3351   */\n      dup3\n        /* \"#utility.yul\":3334:3343   */\n      dup6\n        /* \"#utility.yul\":3330:3352   */\n      add\n        /* \"#utility.yul\":3309:3362   */\n      tag_112\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":3299:3362   */\n      swap2\n      pop\n        /* \"#utility.yul\":3255:3372   */\n      pop\n        /* \"#utility.yul\":3050:3379   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3385:3606   */\n    tag_113:\n        /* \"#utility.yul\":3525:3559   */\n      0x4e6f20746f6b656e7320746f20737465616c2066726f6d20746f7020686f6c64\n        /* \"#utility.yul\":3521:3522   */\n      0x00\n        /* \"#utility.yul\":3513:3519   */\n      dup3\n        /* \"#utility.yul\":3509:3523   */\n      add\n        /* \"#utility.yul\":3502:3560   */\n      mstore\n        /* \"#utility.yul\":3594:3598   */\n      0x6572000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3589:3591   */\n      0x20\n        /* \"#utility.yul\":3581:3587   */\n      dup3\n        /* \"#utility.yul\":3577:3592   */\n      add\n        /* \"#utility.yul\":3570:3599   */\n      mstore\n        /* \"#utility.yul\":3385:3606   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3612:3978   */\n    tag_114:\n        /* \"#utility.yul\":3754:3757   */\n      0x00\n        /* \"#utility.yul\":3775:3842   */\n      tag_163\n        /* \"#utility.yul\":3839:3841   */\n      0x22\n        /* \"#utility.yul\":3834:3837   */\n      dup4\n        /* \"#utility.yul\":3775:3842   */\n      tag_98\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":3768:3842   */\n      swap2\n      pop\n        /* \"#utility.yul\":3851:3944   */\n      tag_164\n        /* \"#utility.yul\":3940:3943   */\n      dup3\n        /* \"#utility.yul\":3851:3944   */\n      tag_113\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":3969:3971   */\n      0x40\n        /* \"#utility.yul\":3964:3967   */\n      dup3\n        /* \"#utility.yul\":3960:3972   */\n      add\n        /* \"#utility.yul\":3953:3972   */\n      swap1\n      pop\n        /* \"#utility.yul\":3612:3978   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3984:4403   */\n    tag_37:\n        /* \"#utility.yul\":4150:4154   */\n      0x00\n        /* \"#utility.yul\":4188:4190   */\n      0x20\n        /* \"#utility.yul\":4177:4186   */\n      dup3\n        /* \"#utility.yul\":4173:4191   */\n      add\n        /* \"#utility.yul\":4165:4191   */\n      swap1\n      pop\n        /* \"#utility.yul\":4237:4246   */\n      dup2\n        /* \"#utility.yul\":4231:4235   */\n      dup2\n        /* \"#utility.yul\":4227:4247   */\n      sub\n        /* \"#utility.yul\":4223:4224   */\n      0x00\n        /* \"#utility.yul\":4212:4221   */\n      dup4\n        /* \"#utility.yul\":4208:4225   */\n      add\n        /* \"#utility.yul\":4201:4248   */\n      mstore\n        /* \"#utility.yul\":4265:4396   */\n      tag_166\n        /* \"#utility.yul\":4391:4395   */\n      dup2\n        /* \"#utility.yul\":4265:4396   */\n      tag_114\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":4257:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":3984:4403   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4409:4633   */\n    tag_115:\n        /* \"#utility.yul\":4549:4583   */\n      0x4e6f20746f6b656e7320746f20737465616c2066726f6d206c6f776573742068\n        /* \"#utility.yul\":4545:4546   */\n      0x00\n        /* \"#utility.yul\":4537:4543   */\n      dup3\n        /* \"#utility.yul\":4533:4547   */\n      add\n        /* \"#utility.yul\":4526:4584   */\n      mstore\n        /* \"#utility.yul\":4618:4625   */\n      0x6f6c646572000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4613:4615   */\n      0x20\n        /* \"#utility.yul\":4605:4611   */\n      dup3\n        /* \"#utility.yul\":4601:4616   */\n      add\n        /* \"#utility.yul\":4594:4626   */\n      mstore\n        /* \"#utility.yul\":4409:4633   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4639:5005   */\n    tag_116:\n        /* \"#utility.yul\":4781:4784   */\n      0x00\n        /* \"#utility.yul\":4802:4869   */\n      tag_169\n        /* \"#utility.yul\":4866:4868   */\n      0x25\n        /* \"#utility.yul\":4861:4864   */\n      dup4\n        /* \"#utility.yul\":4802:4869   */\n      tag_98\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":4795:4869   */\n      swap2\n      pop\n        /* \"#utility.yul\":4878:4971   */\n      tag_170\n        /* \"#utility.yul\":4967:4970   */\n      dup3\n        /* \"#utility.yul\":4878:4971   */\n      tag_115\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":4996:4998   */\n      0x40\n        /* \"#utility.yul\":4991:4994   */\n      dup3\n        /* \"#utility.yul\":4987:4999   */\n      add\n        /* \"#utility.yul\":4980:4999   */\n      swap1\n      pop\n        /* \"#utility.yul\":4639:5005   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5011:5430   */\n    tag_40:\n        /* \"#utility.yul\":5177:5181   */\n      0x00\n        /* \"#utility.yul\":5215:5217   */\n      0x20\n        /* \"#utility.yul\":5204:5213   */\n      dup3\n        /* \"#utility.yul\":5200:5218   */\n      add\n        /* \"#utility.yul\":5192:5218   */\n      swap1\n      pop\n        /* \"#utility.yul\":5264:5273   */\n      dup2\n        /* \"#utility.yul\":5258:5262   */\n      dup2\n        /* \"#utility.yul\":5254:5274   */\n      sub\n        /* \"#utility.yul\":5250:5251   */\n      0x00\n        /* \"#utility.yul\":5239:5248   */\n      dup4\n        /* \"#utility.yul\":5235:5252   */\n      add\n        /* \"#utility.yul\":5228:5275   */\n      mstore\n        /* \"#utility.yul\":5292:5423   */\n      tag_172\n        /* \"#utility.yul\":5418:5422   */\n      dup2\n        /* \"#utility.yul\":5292:5423   */\n      tag_116\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":5284:5423   */\n      swap1\n      pop\n        /* \"#utility.yul\":5011:5430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5436:5666   */\n    tag_117:\n        /* \"#utility.yul\":5576:5610   */\n      0x4c6f776573742062616c616e6365206973206e6f74206c657373207468616e20\n        /* \"#utility.yul\":5572:5573   */\n      0x00\n        /* \"#utility.yul\":5564:5570   */\n      dup3\n        /* \"#utility.yul\":5560:5574   */\n      add\n        /* \"#utility.yul\":5553:5611   */\n      mstore\n        /* \"#utility.yul\":5645:5658   */\n      0x746f702062616c616e6365000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5640:5642   */\n      0x20\n        /* \"#utility.yul\":5632:5638   */\n      dup3\n        /* \"#utility.yul\":5628:5643   */\n      add\n        /* \"#utility.yul\":5621:5659   */\n      mstore\n        /* \"#utility.yul\":5436:5666   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5672:6038   */\n    tag_118:\n        /* \"#utility.yul\":5814:5817   */\n      0x00\n        /* \"#utility.yul\":5835:5902   */\n      tag_175\n        /* \"#utility.yul\":5899:5901   */\n      0x2b\n        /* \"#utility.yul\":5894:5897   */\n      dup4\n        /* \"#utility.yul\":5835:5902   */\n      tag_98\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":5828:5902   */\n      swap2\n      pop\n        /* \"#utility.yul\":5911:6004   */\n      tag_176\n        /* \"#utility.yul\":6000:6003   */\n      dup3\n        /* \"#utility.yul\":5911:6004   */\n      tag_117\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":6029:6031   */\n      0x40\n        /* \"#utility.yul\":6024:6027   */\n      dup3\n        /* \"#utility.yul\":6020:6032   */\n      add\n        /* \"#utility.yul\":6013:6032   */\n      swap1\n      pop\n        /* \"#utility.yul\":5672:6038   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6044:6463   */\n    tag_43:\n        /* \"#utility.yul\":6210:6214   */\n      0x00\n        /* \"#utility.yul\":6248:6250   */\n      0x20\n        /* \"#utility.yul\":6237:6246   */\n      dup3\n        /* \"#utility.yul\":6233:6251   */\n      add\n        /* \"#utility.yul\":6225:6251   */\n      swap1\n      pop\n        /* \"#utility.yul\":6297:6306   */\n      dup2\n        /* \"#utility.yul\":6291:6295   */\n      dup2\n        /* \"#utility.yul\":6287:6307   */\n      sub\n        /* \"#utility.yul\":6283:6284   */\n      0x00\n        /* \"#utility.yul\":6272:6281   */\n      dup4\n        /* \"#utility.yul\":6268:6285   */\n      add\n        /* \"#utility.yul\":6261:6308   */\n      mstore\n        /* \"#utility.yul\":6325:6456   */\n      tag_178\n        /* \"#utility.yul\":6451:6455   */\n      dup2\n        /* \"#utility.yul\":6325:6456   */\n      tag_118\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":6317:6456   */\n      swap1\n      pop\n        /* \"#utility.yul\":6044:6463   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6469:6649   */\n    tag_54:\n        /* \"#utility.yul\":6517:6594   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6514:6515   */\n      0x00\n        /* \"#utility.yul\":6507:6595   */\n      mstore\n        /* \"#utility.yul\":6614:6618   */\n      0x32\n        /* \"#utility.yul\":6611:6612   */\n      0x04\n        /* \"#utility.yul\":6604:6619   */\n      mstore\n        /* \"#utility.yul\":6638:6642   */\n      0x24\n        /* \"#utility.yul\":6635:6636   */\n      0x00\n        /* \"#utility.yul\":6628:6643   */\n      revert\n        /* \"#utility.yul\":6655:6835   */\n    tag_119:\n        /* \"#utility.yul\":6703:6780   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6700:6701   */\n      0x00\n        /* \"#utility.yul\":6693:6781   */\n      mstore\n        /* \"#utility.yul\":6800:6804   */\n      0x12\n        /* \"#utility.yul\":6797:6798   */\n      0x04\n        /* \"#utility.yul\":6790:6805   */\n      mstore\n        /* \"#utility.yul\":6824:6828   */\n      0x24\n        /* \"#utility.yul\":6821:6822   */\n      0x00\n        /* \"#utility.yul\":6814:6829   */\n      revert\n        /* \"#utility.yul\":6841:7021   */\n    tag_120:\n        /* \"#utility.yul\":6889:6966   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6886:6887   */\n      0x00\n        /* \"#utility.yul\":6879:6967   */\n      mstore\n        /* \"#utility.yul\":6986:6990   */\n      0x11\n        /* \"#utility.yul\":6983:6984   */\n      0x04\n        /* \"#utility.yul\":6976:6991   */\n      mstore\n        /* \"#utility.yul\":7010:7014   */\n      0x24\n        /* \"#utility.yul\":7007:7008   */\n      0x00\n        /* \"#utility.yul\":7000:7015   */\n      revert\n        /* \"#utility.yul\":7027:7212   */\n    tag_90:\n        /* \"#utility.yul\":7067:7068   */\n      0x00\n        /* \"#utility.yul\":7084:7104   */\n      tag_183\n        /* \"#utility.yul\":7102:7103   */\n      dup3\n        /* \"#utility.yul\":7084:7104   */\n      tag_102\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":7079:7104   */\n      swap2\n      pop\n        /* \"#utility.yul\":7118:7138   */\n      tag_184\n        /* \"#utility.yul\":7136:7137   */\n      dup4\n        /* \"#utility.yul\":7118:7138   */\n      tag_102\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":7113:7138   */\n      swap3\n      pop\n        /* \"#utility.yul\":7157:7158   */\n      dup3\n        /* \"#utility.yul\":7147:7182   */\n      tag_185\n      jumpi\n        /* \"#utility.yul\":7162:7180   */\n      tag_186\n      tag_119\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":7147:7182   */\n    tag_185:\n        /* \"#utility.yul\":7204:7205   */\n      dup3\n        /* \"#utility.yul\":7201:7202   */\n      dup3\n        /* \"#utility.yul\":7197:7206   */\n      div\n        /* \"#utility.yul\":7192:7206   */\n      swap1\n      pop\n        /* \"#utility.yul\":7027:7212   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7218:7412   */\n    tag_93:\n        /* \"#utility.yul\":7258:7262   */\n      0x00\n        /* \"#utility.yul\":7278:7298   */\n      tag_188\n        /* \"#utility.yul\":7296:7297   */\n      dup3\n        /* \"#utility.yul\":7278:7298   */\n      tag_102\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":7273:7298   */\n      swap2\n      pop\n        /* \"#utility.yul\":7312:7332   */\n      tag_189\n        /* \"#utility.yul\":7330:7331   */\n      dup4\n        /* \"#utility.yul\":7312:7332   */\n      tag_102\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":7307:7332   */\n      swap3\n      pop\n        /* \"#utility.yul\":7356:7357   */\n      dup3\n        /* \"#utility.yul\":7353:7354   */\n      dup3\n        /* \"#utility.yul\":7349:7358   */\n      sub\n        /* \"#utility.yul\":7341:7358   */\n      swap1\n      pop\n        /* \"#utility.yul\":7380:7381   */\n      dup2\n        /* \"#utility.yul\":7374:7378   */\n      dup2\n        /* \"#utility.yul\":7371:7382   */\n      gt\n        /* \"#utility.yul\":7368:7405   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":7385:7403   */\n      tag_191\n      tag_120\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":7368:7405   */\n    tag_190:\n        /* \"#utility.yul\":7218:7412   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7418:7609   */\n    tag_96:\n        /* \"#utility.yul\":7458:7461   */\n      0x00\n        /* \"#utility.yul\":7477:7497   */\n      tag_193\n        /* \"#utility.yul\":7495:7496   */\n      dup3\n        /* \"#utility.yul\":7477:7497   */\n      tag_102\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":7472:7497   */\n      swap2\n      pop\n        /* \"#utility.yul\":7511:7531   */\n      tag_194\n        /* \"#utility.yul\":7529:7530   */\n      dup4\n        /* \"#utility.yul\":7511:7531   */\n      tag_102\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":7506:7531   */\n      swap3\n      pop\n        /* \"#utility.yul\":7554:7555   */\n      dup3\n        /* \"#utility.yul\":7551:7552   */\n      dup3\n        /* \"#utility.yul\":7547:7556   */\n      add\n        /* \"#utility.yul\":7540:7556   */\n      swap1\n      pop\n        /* \"#utility.yul\":7575:7578   */\n      dup1\n        /* \"#utility.yul\":7572:7573   */\n      dup3\n        /* \"#utility.yul\":7569:7579   */\n      gt\n        /* \"#utility.yul\":7566:7602   */\n      iszero\n      tag_195\n      jumpi\n        /* \"#utility.yul\":7582:7600   */\n      tag_196\n      tag_120\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":7566:7602   */\n    tag_195:\n        /* \"#utility.yul\":7418:7609   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f19cacb23da66d2e8066ecbc2c8c10c22dc385f2e85181b34ef906857e2f42df64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_377": {
									"entryPoint": null,
									"id": 377,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:439:2",
										"nodeType": "YulBlock",
										"src": "0:439:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:2",
													"nodeType": "YulBlock",
													"src": "52:32:2",
													"statements": [
														{
															"nativeSrc": "62:16:2",
															"nodeType": "YulAssignment",
															"src": "62:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:2",
																"nodeType": "YulIdentifier",
																"src": "73:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:2",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:2",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:77:2"
											},
											{
												"body": {
													"nativeSrc": "155:53:2",
													"nodeType": "YulBlock",
													"src": "155:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:2"
																		},
																		"nativeSrc": "177:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:2"
																},
																"nativeSrc": "165:37:2",
																"nodeType": "YulFunctionCall",
																"src": "165:37:2"
															},
															"nativeSrc": "165:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:2",
														"nodeType": "YulTypedName",
														"src": "143:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:2",
														"nodeType": "YulTypedName",
														"src": "150:3:2",
														"type": ""
													}
												],
												"src": "90:118:2"
											},
											{
												"body": {
													"nativeSrc": "312:124:2",
													"nodeType": "YulBlock",
													"src": "312:124:2",
													"statements": [
														{
															"nativeSrc": "322:26:2",
															"nodeType": "YulAssignment",
															"src": "322:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:2",
																		"nodeType": "YulLiteral",
																		"src": "345:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:2"
																},
																"nativeSrc": "330:18:2",
																"nodeType": "YulFunctionCall",
																"src": "330:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:2",
																				"nodeType": "YulLiteral",
																				"src": "426:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:2"
																		},
																		"nativeSrc": "411:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:2"
																},
																"nativeSrc": "358:71:2",
																"nodeType": "YulFunctionCall",
																"src": "358:71:2"
															},
															"nativeSrc": "358:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:2",
														"nodeType": "YulTypedName",
														"src": "284:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:2",
														"nodeType": "YulTypedName",
														"src": "296:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:2",
														"nodeType": "YulTypedName",
														"src": "307:4:2",
														"type": ""
													}
												],
												"src": "214:222:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH6 0x9184E72A000 PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x3 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0x1A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1BD JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19C DUP2 PUSH2 0x189 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x193 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE30 DUP1 PUSH2 0x1CC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x8A8756AE EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xFB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x119 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH2 0x152 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9A SWAP2 SWAP1 PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAB PUSH2 0x158 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0xA73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x15D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH2 0x1A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x103 PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110 SWAP2 SWAP1 PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x537573686920546F6B656E000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1B1 PUSH2 0x4EC JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x23C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x233 SWAP1 PUSH2 0xB90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x2C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BA SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FC SWAP1 PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x31B PUSH1 0xA DUP5 PUSH2 0x92F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x36F DUP2 PUSH1 0x1 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x945 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x404 DUP2 PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x95B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x4A4 SWAP2 SWAP1 PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5355534849000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x504 JUMPI PUSH2 0x503 PUSH2 0xCD4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x546 JUMPI PUSH2 0x545 PUSH2 0xCD4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x58E JUMPI PUSH2 0x58D PUSH2 0xCD4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x611 JUMPI PUSH2 0x610 PUSH2 0xCD4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x928 JUMPI DUP3 PUSH1 0x1 PUSH1 0x0 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x6A6 JUMPI PUSH2 0x6A5 PUSH2 0xCD4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x7D4 JUMPI PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x726 JUMPI PUSH2 0x725 PUSH2 0xCD4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP5 POP PUSH1 0x1 PUSH1 0x0 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x76B JUMPI PUSH2 0x76A PUSH2 0xCD4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP3 POP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x7ED JUMPI PUSH2 0x7EC PUSH2 0xCD4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x91B JUMPI PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x86D JUMPI PUSH2 0x86C PUSH2 0xCD4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP PUSH1 0x1 PUSH1 0x0 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x8B2 JUMPI PUSH2 0x8B1 PUSH2 0xCD4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x680 JUMP JUMPDEST POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x93D SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x953 SWAP2 SWAP1 PUSH2 0xD92 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x969 SWAP2 SWAP1 PUSH2 0xDC6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9AB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x990 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D3 DUP3 PUSH2 0x971 JUMP JUMPDEST PUSH2 0x9DD DUP2 DUP6 PUSH2 0x97C JUMP JUMPDEST SWAP4 POP PUSH2 0x9ED DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x98D JUMP JUMPDEST PUSH2 0x9F6 DUP2 PUSH2 0x9B7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA1B DUP2 DUP5 PUSH2 0x9C8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA36 DUP2 PUSH2 0xA23 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA51 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA6D DUP2 PUSH2 0xA57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA88 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xABE DUP3 PUSH2 0xA93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xACE DUP2 PUSH2 0xAB3 JUMP JUMPDEST DUP2 EQ PUSH2 0xAD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAEB DUP2 PUSH2 0xAC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB07 JUMPI PUSH2 0xB06 PUSH2 0xA8E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB15 DUP5 DUP3 DUP6 ADD PUSH2 0xADC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F20737465616C2066726F6D20746F7020686F6C64 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7A PUSH1 0x22 DUP4 PUSH2 0x97C JUMP JUMPDEST SWAP2 POP PUSH2 0xB85 DUP3 PUSH2 0xB1E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBA9 DUP2 PUSH2 0xB6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F20737465616C2066726F6D206C6F776573742068 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6C646572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC0C PUSH1 0x25 DUP4 PUSH2 0x97C JUMP JUMPDEST SWAP2 POP PUSH2 0xC17 DUP3 PUSH2 0xBB0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC3B DUP2 PUSH2 0xBFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C6F776573742062616C616E6365206973206E6F74206C657373207468616E20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x746F702062616C616E6365000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9E PUSH1 0x2B DUP4 PUSH2 0x97C JUMP JUMPDEST SWAP2 POP PUSH2 0xCA9 DUP3 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCCD DUP2 PUSH2 0xC91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD6C DUP3 PUSH2 0xA23 JUMP JUMPDEST SWAP2 POP PUSH2 0xD77 DUP4 PUSH2 0xA23 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xD87 JUMPI PUSH2 0xD86 PUSH2 0xD03 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD9D DUP3 PUSH2 0xA23 JUMP JUMPDEST SWAP2 POP PUSH2 0xDA8 DUP4 PUSH2 0xA23 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xDC0 JUMPI PUSH2 0xDBF PUSH2 0xD32 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD1 DUP3 PUSH2 0xA23 JUMP JUMPDEST SWAP2 POP PUSH2 0xDDC DUP4 PUSH2 0xA23 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDF4 JUMPI PUSH2 0xDF3 PUSH2 0xD32 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL SWAP13 0xAC 0xB2 RETURNDATASIZE 0xA6 PUSH14 0x2E8066ECBC2C8C10C22DC385F2E8 MLOAD DUP2 0xB3 0x4E 0xF9 MOD DUP6 PUSH31 0x2F42DF64736F6C634300081900330000000000000000000000000000000000 ",
							"sourceMap": "118:3093:1:-:0;;;206:6;177:35;;666:199;;;;;;;;;;714:11;;691:8;:20;700:10;691:20;;;;;;;;;;;;;;;:34;;;;758:4;735:8;:20;744:10;735:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;772:9;787:10;772:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;834:10;813:45;;830:1;813:45;;;846:11;;813:45;;;;;;:::i;:::-;;;;;;;;118:3093;;7:77:2;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;118:3093:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@add_175": {
									"entryPoint": 2395,
									"id": 175,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_389": {
									"entryPoint": 349,
									"id": 389,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_328": {
									"entryPoint": 344,
									"id": 328,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_220": {
									"entryPoint": 2351,
									"id": 220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@findTopAndLowestHolders_630": {
									"entryPoint": 1260,
									"id": 630,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@name_325": {
									"entryPoint": 281,
									"id": 325,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stealFromTopAndLowest_535": {
									"entryPoint": 422,
									"id": 535,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_190": {
									"entryPoint": 2373,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@symbol_331": {
									"entryPoint": 1203,
									"id": 331,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_322": {
									"entryPoint": 338,
									"id": 322,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2504,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_06b580f149ea53acfb705529974e2939ecc187f521fc291a73b1b28e523f4804_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1fe84a216921d591bc65562541187346421d15d084c4db140a9b25a310deb0f4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_575628dea368647ba253efd2c10d4b50c2c82c9ce583c6699f6b9a64c8dff116_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 2660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_06b580f149ea53acfb705529974e2939ecc187f521fc291a73b1b28e523f4804__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1fe84a216921d591bc65562541187346421d15d084c4db140a9b25a310deb0f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_575628dea368647ba253efd2c10d4b50c2c82c9ce583c6699f6b9a64c8dff116__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 2675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2445,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 3378,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3331,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3284,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2702,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_06b580f149ea53acfb705529974e2939ecc187f521fc291a73b1b28e523f4804": {
									"entryPoint": 2992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1fe84a216921d591bc65562541187346421d15d084c4db140a9b25a310deb0f4": {
									"entryPoint": 2846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_575628dea368647ba253efd2c10d4b50c2c82c9ce583c6699f6b9a64c8dff116": {
									"entryPoint": 3138,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7612:2",
										"nodeType": "YulBlock",
										"src": "0:7612:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:2",
													"nodeType": "YulBlock",
													"src": "66:40:2",
													"statements": [
														{
															"nativeSrc": "77:22:2",
															"nodeType": "YulAssignment",
															"src": "77:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:2"
																},
																"nativeSrc": "87:12:2",
																"nodeType": "YulFunctionCall",
																"src": "87:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:2",
														"nodeType": "YulTypedName",
														"src": "49:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:2",
														"nodeType": "YulTypedName",
														"src": "59:6:2",
														"type": ""
													}
												],
												"src": "7:99:2"
											},
											{
												"body": {
													"nativeSrc": "208:73:2",
													"nodeType": "YulBlock",
													"src": "208:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:2"
																},
																"nativeSrc": "218:19:2",
																"nodeType": "YulFunctionCall",
																"src": "218:19:2"
															},
															"nativeSrc": "218:19:2",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:2"
														},
														{
															"nativeSrc": "246:29:2",
															"nodeType": "YulAssignment",
															"src": "246:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:2",
																		"nodeType": "YulLiteral",
																		"src": "270:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:2"
																},
																"nativeSrc": "261:14:2",
																"nodeType": "YulFunctionCall",
																"src": "261:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:2",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:2",
														"nodeType": "YulTypedName",
														"src": "180:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:2",
														"nodeType": "YulTypedName",
														"src": "185:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:2",
														"nodeType": "YulTypedName",
														"src": "196:11:2",
														"type": ""
													}
												],
												"src": "112:169:2"
											},
											{
												"body": {
													"nativeSrc": "349:186:2",
													"nodeType": "YulBlock",
													"src": "349:186:2",
													"statements": [
														{
															"nativeSrc": "360:10:2",
															"nodeType": "YulVariableDeclaration",
															"src": "360:10:2",
															"value": {
																"kind": "number",
																"nativeSrc": "369:1:2",
																"nodeType": "YulLiteral",
																"src": "369:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "364:1:2",
																	"nodeType": "YulTypedName",
																	"src": "364:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "429:63:2",
																"nodeType": "YulBlock",
																"src": "429:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "454:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "454:3:2"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "459:1:2",
																							"nodeType": "YulIdentifier",
																							"src": "459:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "450:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "450:3:2"
																					},
																					"nativeSrc": "450:11:2",
																					"nodeType": "YulFunctionCall",
																					"src": "450:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "473:3:2",
																									"nodeType": "YulIdentifier",
																									"src": "473:3:2"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "478:1:2",
																									"nodeType": "YulIdentifier",
																									"src": "478:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "469:3:2",
																								"nodeType": "YulIdentifier",
																								"src": "469:3:2"
																							},
																							"nativeSrc": "469:11:2",
																							"nodeType": "YulFunctionCall",
																							"src": "469:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "463:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "463:5:2"
																					},
																					"nativeSrc": "463:18:2",
																					"nodeType": "YulFunctionCall",
																					"src": "463:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "443:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "443:6:2"
																			},
																			"nativeSrc": "443:39:2",
																			"nodeType": "YulFunctionCall",
																			"src": "443:39:2"
																		},
																		"nativeSrc": "443:39:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "443:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "390:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "390:1:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "393:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "393:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "387:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "387:2:2"
																},
																"nativeSrc": "387:13:2",
																"nodeType": "YulFunctionCall",
																"src": "387:13:2"
															},
															"nativeSrc": "379:113:2",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "401:19:2",
																"nodeType": "YulBlock",
																"src": "401:19:2",
																"statements": [
																	{
																		"nativeSrc": "403:15:2",
																		"nodeType": "YulAssignment",
																		"src": "403:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "412:1:2",
																					"nodeType": "YulIdentifier",
																					"src": "412:1:2"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "415:2:2",
																					"nodeType": "YulLiteral",
																					"src": "415:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "408:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "408:3:2"
																			},
																			"nativeSrc": "408:10:2",
																			"nodeType": "YulFunctionCall",
																			"src": "408:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "403:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "403:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "383:3:2",
																"nodeType": "YulBlock",
																"src": "383:3:2",
																"statements": []
															},
															"src": "379:113:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "512:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "512:3:2"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "517:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "517:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "508:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "508:3:2"
																		},
																		"nativeSrc": "508:16:2",
																		"nodeType": "YulFunctionCall",
																		"src": "508:16:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "526:1:2",
																		"nodeType": "YulLiteral",
																		"src": "526:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "501:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "501:6:2"
																},
																"nativeSrc": "501:27:2",
																"nodeType": "YulFunctionCall",
																"src": "501:27:2"
															},
															"nativeSrc": "501:27:2",
															"nodeType": "YulExpressionStatement",
															"src": "501:27:2"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:248:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:2",
														"nodeType": "YulTypedName",
														"src": "331:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:2",
														"nodeType": "YulTypedName",
														"src": "336:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:2",
														"nodeType": "YulTypedName",
														"src": "341:6:2",
														"type": ""
													}
												],
												"src": "287:248:2"
											},
											{
												"body": {
													"nativeSrc": "589:54:2",
													"nodeType": "YulBlock",
													"src": "589:54:2",
													"statements": [
														{
															"nativeSrc": "599:38:2",
															"nodeType": "YulAssignment",
															"src": "599:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "617:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "617:5:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "624:2:2",
																				"nodeType": "YulLiteral",
																				"src": "624:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "613:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "613:3:2"
																		},
																		"nativeSrc": "613:14:2",
																		"nodeType": "YulFunctionCall",
																		"src": "613:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "633:2:2",
																				"nodeType": "YulLiteral",
																				"src": "633:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "629:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "629:3:2"
																		},
																		"nativeSrc": "629:7:2",
																		"nodeType": "YulFunctionCall",
																		"src": "629:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "609:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "609:3:2"
																},
																"nativeSrc": "609:28:2",
																"nodeType": "YulFunctionCall",
																"src": "609:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "599:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "599:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "541:102:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "572:5:2",
														"nodeType": "YulTypedName",
														"src": "572:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "582:6:2",
														"nodeType": "YulTypedName",
														"src": "582:6:2",
														"type": ""
													}
												],
												"src": "541:102:2"
											},
											{
												"body": {
													"nativeSrc": "741:285:2",
													"nodeType": "YulBlock",
													"src": "741:285:2",
													"statements": [
														{
															"nativeSrc": "751:53:2",
															"nodeType": "YulVariableDeclaration",
															"src": "751:53:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "798:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "798:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "765:32:2",
																	"nodeType": "YulIdentifier",
																	"src": "765:32:2"
																},
																"nativeSrc": "765:39:2",
																"nodeType": "YulFunctionCall",
																"src": "765:39:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "755:6:2",
																	"nodeType": "YulTypedName",
																	"src": "755:6:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "813:78:2",
															"nodeType": "YulAssignment",
															"src": "813:78:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "879:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "879:3:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "884:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "884:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "820:58:2",
																	"nodeType": "YulIdentifier",
																	"src": "820:58:2"
																},
																"nativeSrc": "820:71:2",
																"nodeType": "YulFunctionCall",
																"src": "820:71:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "813:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "813:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "939:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "939:5:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "946:4:2",
																				"nodeType": "YulLiteral",
																				"src": "946:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "935:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "935:3:2"
																		},
																		"nativeSrc": "935:16:2",
																		"nodeType": "YulFunctionCall",
																		"src": "935:16:2"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "953:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "953:3:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "958:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "958:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "900:34:2",
																	"nodeType": "YulIdentifier",
																	"src": "900:34:2"
																},
																"nativeSrc": "900:65:2",
																"nodeType": "YulFunctionCall",
																"src": "900:65:2"
															},
															"nativeSrc": "900:65:2",
															"nodeType": "YulExpressionStatement",
															"src": "900:65:2"
														},
														{
															"nativeSrc": "974:46:2",
															"nodeType": "YulAssignment",
															"src": "974:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "985:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "985:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1012:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1012:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "990:21:2",
																			"nodeType": "YulIdentifier",
																			"src": "990:21:2"
																		},
																		"nativeSrc": "990:29:2",
																		"nodeType": "YulFunctionCall",
																		"src": "990:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "981:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "981:3:2"
																},
																"nativeSrc": "981:39:2",
																"nodeType": "YulFunctionCall",
																"src": "981:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "974:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "974:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "649:377:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "722:5:2",
														"nodeType": "YulTypedName",
														"src": "722:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "729:3:2",
														"nodeType": "YulTypedName",
														"src": "729:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "737:3:2",
														"nodeType": "YulTypedName",
														"src": "737:3:2",
														"type": ""
													}
												],
												"src": "649:377:2"
											},
											{
												"body": {
													"nativeSrc": "1150:195:2",
													"nodeType": "YulBlock",
													"src": "1150:195:2",
													"statements": [
														{
															"nativeSrc": "1160:26:2",
															"nodeType": "YulAssignment",
															"src": "1160:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1172:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1172:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1183:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1183:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1168:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1168:3:2"
																},
																"nativeSrc": "1168:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1168:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1160:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1160:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1207:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1207:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1218:1:2",
																				"nodeType": "YulLiteral",
																				"src": "1218:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1203:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1203:3:2"
																		},
																		"nativeSrc": "1203:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1203:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1226:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "1226:4:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1232:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1232:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1222:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1222:3:2"
																		},
																		"nativeSrc": "1222:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1222:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1196:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1196:6:2"
																},
																"nativeSrc": "1196:47:2",
																"nodeType": "YulFunctionCall",
																"src": "1196:47:2"
															},
															"nativeSrc": "1196:47:2",
															"nodeType": "YulExpressionStatement",
															"src": "1196:47:2"
														},
														{
															"nativeSrc": "1252:86:2",
															"nodeType": "YulAssignment",
															"src": "1252:86:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1324:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1324:6:2"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1333:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "1333:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1260:63:2",
																	"nodeType": "YulIdentifier",
																	"src": "1260:63:2"
																},
																"nativeSrc": "1260:78:2",
																"nodeType": "YulFunctionCall",
																"src": "1260:78:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1252:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1252:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1032:313:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1122:9:2",
														"nodeType": "YulTypedName",
														"src": "1122:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1134:6:2",
														"nodeType": "YulTypedName",
														"src": "1134:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1145:4:2",
														"nodeType": "YulTypedName",
														"src": "1145:4:2",
														"type": ""
													}
												],
												"src": "1032:313:2"
											},
											{
												"body": {
													"nativeSrc": "1396:32:2",
													"nodeType": "YulBlock",
													"src": "1396:32:2",
													"statements": [
														{
															"nativeSrc": "1406:16:2",
															"nodeType": "YulAssignment",
															"src": "1406:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "1417:5:2",
																"nodeType": "YulIdentifier",
																"src": "1417:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1406:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "1406:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1351:77:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1378:5:2",
														"nodeType": "YulTypedName",
														"src": "1378:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1388:7:2",
														"nodeType": "YulTypedName",
														"src": "1388:7:2",
														"type": ""
													}
												],
												"src": "1351:77:2"
											},
											{
												"body": {
													"nativeSrc": "1499:53:2",
													"nodeType": "YulBlock",
													"src": "1499:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1516:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1516:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1539:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1539:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1521:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "1521:17:2"
																		},
																		"nativeSrc": "1521:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1521:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1509:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1509:6:2"
																},
																"nativeSrc": "1509:37:2",
																"nodeType": "YulFunctionCall",
																"src": "1509:37:2"
															},
															"nativeSrc": "1509:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "1509:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1434:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1487:5:2",
														"nodeType": "YulTypedName",
														"src": "1487:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1494:3:2",
														"nodeType": "YulTypedName",
														"src": "1494:3:2",
														"type": ""
													}
												],
												"src": "1434:118:2"
											},
											{
												"body": {
													"nativeSrc": "1656:124:2",
													"nodeType": "YulBlock",
													"src": "1656:124:2",
													"statements": [
														{
															"nativeSrc": "1666:26:2",
															"nodeType": "YulAssignment",
															"src": "1666:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1678:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1678:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1689:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1689:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1674:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1674:3:2"
																},
																"nativeSrc": "1674:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1674:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1666:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1666:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1746:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1746:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1759:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1759:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1770:1:2",
																				"nodeType": "YulLiteral",
																				"src": "1770:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1755:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1755:3:2"
																		},
																		"nativeSrc": "1755:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1755:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1702:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "1702:43:2"
																},
																"nativeSrc": "1702:71:2",
																"nodeType": "YulFunctionCall",
																"src": "1702:71:2"
															},
															"nativeSrc": "1702:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "1702:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1558:222:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1628:9:2",
														"nodeType": "YulTypedName",
														"src": "1628:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1640:6:2",
														"nodeType": "YulTypedName",
														"src": "1640:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1651:4:2",
														"nodeType": "YulTypedName",
														"src": "1651:4:2",
														"type": ""
													}
												],
												"src": "1558:222:2"
											},
											{
												"body": {
													"nativeSrc": "1829:43:2",
													"nodeType": "YulBlock",
													"src": "1829:43:2",
													"statements": [
														{
															"nativeSrc": "1839:27:2",
															"nodeType": "YulAssignment",
															"src": "1839:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1854:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "1854:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1861:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1861:4:2",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1850:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1850:3:2"
																},
																"nativeSrc": "1850:16:2",
																"nodeType": "YulFunctionCall",
																"src": "1850:16:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1839:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "1839:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "1786:86:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1811:5:2",
														"nodeType": "YulTypedName",
														"src": "1811:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1821:7:2",
														"nodeType": "YulTypedName",
														"src": "1821:7:2",
														"type": ""
													}
												],
												"src": "1786:86:2"
											},
											{
												"body": {
													"nativeSrc": "1939:51:2",
													"nodeType": "YulBlock",
													"src": "1939:51:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1956:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1956:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1977:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1977:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "1961:15:2",
																			"nodeType": "YulIdentifier",
																			"src": "1961:15:2"
																		},
																		"nativeSrc": "1961:22:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1961:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1949:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1949:6:2"
																},
																"nativeSrc": "1949:35:2",
																"nodeType": "YulFunctionCall",
																"src": "1949:35:2"
															},
															"nativeSrc": "1949:35:2",
															"nodeType": "YulExpressionStatement",
															"src": "1949:35:2"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "1878:112:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1927:5:2",
														"nodeType": "YulTypedName",
														"src": "1927:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1934:3:2",
														"nodeType": "YulTypedName",
														"src": "1934:3:2",
														"type": ""
													}
												],
												"src": "1878:112:2"
											},
											{
												"body": {
													"nativeSrc": "2090:120:2",
													"nodeType": "YulBlock",
													"src": "2090:120:2",
													"statements": [
														{
															"nativeSrc": "2100:26:2",
															"nodeType": "YulAssignment",
															"src": "2100:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2112:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2112:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2123:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2123:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2108:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2108:3:2"
																},
																"nativeSrc": "2108:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2108:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2100:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2100:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2176:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2189:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2189:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2200:1:2",
																				"nodeType": "YulLiteral",
																				"src": "2200:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2185:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2185:3:2"
																		},
																		"nativeSrc": "2185:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2185:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "2136:39:2",
																	"nodeType": "YulIdentifier",
																	"src": "2136:39:2"
																},
																"nativeSrc": "2136:67:2",
																"nodeType": "YulFunctionCall",
																"src": "2136:67:2"
															},
															"nativeSrc": "2136:67:2",
															"nodeType": "YulExpressionStatement",
															"src": "2136:67:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1996:214:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2062:9:2",
														"nodeType": "YulTypedName",
														"src": "2062:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2074:6:2",
														"nodeType": "YulTypedName",
														"src": "2074:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2085:4:2",
														"nodeType": "YulTypedName",
														"src": "2085:4:2",
														"type": ""
													}
												],
												"src": "1996:214:2"
											},
											{
												"body": {
													"nativeSrc": "2256:35:2",
													"nodeType": "YulBlock",
													"src": "2256:35:2",
													"statements": [
														{
															"nativeSrc": "2266:19:2",
															"nodeType": "YulAssignment",
															"src": "2266:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2282:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2282:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2276:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "2276:5:2"
																},
																"nativeSrc": "2276:9:2",
																"nodeType": "YulFunctionCall",
																"src": "2276:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2266:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2266:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "2216:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2249:6:2",
														"nodeType": "YulTypedName",
														"src": "2249:6:2",
														"type": ""
													}
												],
												"src": "2216:75:2"
											},
											{
												"body": {
													"nativeSrc": "2386:28:2",
													"nodeType": "YulBlock",
													"src": "2386:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2403:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2403:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2406:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2406:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2396:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2396:6:2"
																},
																"nativeSrc": "2396:12:2",
																"nodeType": "YulFunctionCall",
																"src": "2396:12:2"
															},
															"nativeSrc": "2396:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "2396:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "2297:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "2297:117:2"
											},
											{
												"body": {
													"nativeSrc": "2509:28:2",
													"nodeType": "YulBlock",
													"src": "2509:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2526:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2526:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2529:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2529:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2519:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2519:6:2"
																},
																"nativeSrc": "2519:12:2",
																"nodeType": "YulFunctionCall",
																"src": "2519:12:2"
															},
															"nativeSrc": "2519:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "2519:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2420:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "2420:117:2"
											},
											{
												"body": {
													"nativeSrc": "2588:81:2",
													"nodeType": "YulBlock",
													"src": "2588:81:2",
													"statements": [
														{
															"nativeSrc": "2598:65:2",
															"nodeType": "YulAssignment",
															"src": "2598:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2613:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "2613:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2620:42:2",
																		"nodeType": "YulLiteral",
																		"src": "2620:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2609:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2609:3:2"
																},
																"nativeSrc": "2609:54:2",
																"nodeType": "YulFunctionCall",
																"src": "2609:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2598:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "2598:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2543:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2570:5:2",
														"nodeType": "YulTypedName",
														"src": "2570:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2580:7:2",
														"nodeType": "YulTypedName",
														"src": "2580:7:2",
														"type": ""
													}
												],
												"src": "2543:126:2"
											},
											{
												"body": {
													"nativeSrc": "2720:51:2",
													"nodeType": "YulBlock",
													"src": "2720:51:2",
													"statements": [
														{
															"nativeSrc": "2730:35:2",
															"nodeType": "YulAssignment",
															"src": "2730:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2759:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "2759:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2741:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "2741:17:2"
																},
																"nativeSrc": "2741:24:2",
																"nodeType": "YulFunctionCall",
																"src": "2741:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2730:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "2730:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2675:96:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2702:5:2",
														"nodeType": "YulTypedName",
														"src": "2702:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2712:7:2",
														"nodeType": "YulTypedName",
														"src": "2712:7:2",
														"type": ""
													}
												],
												"src": "2675:96:2"
											},
											{
												"body": {
													"nativeSrc": "2820:79:2",
													"nodeType": "YulBlock",
													"src": "2820:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "2877:16:2",
																"nodeType": "YulBlock",
																"src": "2877:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2886:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2886:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2889:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2889:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2879:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "2879:6:2"
																			},
																			"nativeSrc": "2879:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2879:12:2"
																		},
																		"nativeSrc": "2879:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2879:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2843:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2843:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2868:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "2868:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2850:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "2850:17:2"
																				},
																				"nativeSrc": "2850:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2850:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2840:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "2840:2:2"
																		},
																		"nativeSrc": "2840:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2840:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2833:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2833:6:2"
																},
																"nativeSrc": "2833:43:2",
																"nodeType": "YulFunctionCall",
																"src": "2833:43:2"
															},
															"nativeSrc": "2830:63:2",
															"nodeType": "YulIf",
															"src": "2830:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2777:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2813:5:2",
														"nodeType": "YulTypedName",
														"src": "2813:5:2",
														"type": ""
													}
												],
												"src": "2777:122:2"
											},
											{
												"body": {
													"nativeSrc": "2957:87:2",
													"nodeType": "YulBlock",
													"src": "2957:87:2",
													"statements": [
														{
															"nativeSrc": "2967:29:2",
															"nodeType": "YulAssignment",
															"src": "2967:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2989:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2989:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2976:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "2976:12:2"
																},
																"nativeSrc": "2976:20:2",
																"nodeType": "YulFunctionCall",
																"src": "2976:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2967:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "2967:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3032:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "3032:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3005:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "3005:26:2"
																},
																"nativeSrc": "3005:33:2",
																"nodeType": "YulFunctionCall",
																"src": "3005:33:2"
															},
															"nativeSrc": "3005:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "3005:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2905:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2935:6:2",
														"nodeType": "YulTypedName",
														"src": "2935:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2943:3:2",
														"nodeType": "YulTypedName",
														"src": "2943:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2951:5:2",
														"nodeType": "YulTypedName",
														"src": "2951:5:2",
														"type": ""
													}
												],
												"src": "2905:139:2"
											},
											{
												"body": {
													"nativeSrc": "3116:263:2",
													"nodeType": "YulBlock",
													"src": "3116:263:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "3162:83:2",
																"nodeType": "YulBlock",
																"src": "3162:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3164:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "3164:77:2"
																			},
																			"nativeSrc": "3164:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3164:79:2"
																		},
																		"nativeSrc": "3164:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3164:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3137:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "3137:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3146:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3146:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3133:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3133:3:2"
																		},
																		"nativeSrc": "3133:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3133:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3158:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3158:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3129:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3129:3:2"
																},
																"nativeSrc": "3129:32:2",
																"nodeType": "YulFunctionCall",
																"src": "3129:32:2"
															},
															"nativeSrc": "3126:119:2",
															"nodeType": "YulIf",
															"src": "3126:119:2"
														},
														{
															"nativeSrc": "3255:117:2",
															"nodeType": "YulBlock",
															"src": "3255:117:2",
															"statements": [
																{
																	"nativeSrc": "3270:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3270:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3284:1:2",
																		"nodeType": "YulLiteral",
																		"src": "3284:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3274:6:2",
																			"nodeType": "YulTypedName",
																			"src": "3274:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3299:63:2",
																	"nodeType": "YulAssignment",
																	"src": "3299:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3334:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "3334:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3345:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "3345:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3330:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "3330:3:2"
																				},
																				"nativeSrc": "3330:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3330:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3354:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "3354:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3309:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "3309:20:2"
																		},
																		"nativeSrc": "3309:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3309:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3299:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "3299:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3050:329:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3086:9:2",
														"nodeType": "YulTypedName",
														"src": "3086:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3097:7:2",
														"nodeType": "YulTypedName",
														"src": "3097:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3109:6:2",
														"nodeType": "YulTypedName",
														"src": "3109:6:2",
														"type": ""
													}
												],
												"src": "3050:329:2"
											},
											{
												"body": {
													"nativeSrc": "3491:115:2",
													"nodeType": "YulBlock",
													"src": "3491:115:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3513:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "3513:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3521:1:2",
																				"nodeType": "YulLiteral",
																				"src": "3521:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3509:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3509:3:2"
																		},
																		"nativeSrc": "3509:14:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3509:14:2"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e7320746f20737465616c2066726f6d20746f7020686f6c64",
																		"kind": "string",
																		"nativeSrc": "3525:34:2",
																		"nodeType": "YulLiteral",
																		"src": "3525:34:2",
																		"type": "",
																		"value": "No tokens to steal from top hold"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3502:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3502:6:2"
																},
																"nativeSrc": "3502:58:2",
																"nodeType": "YulFunctionCall",
																"src": "3502:58:2"
															},
															"nativeSrc": "3502:58:2",
															"nodeType": "YulExpressionStatement",
															"src": "3502:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3581:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "3581:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3589:2:2",
																				"nodeType": "YulLiteral",
																				"src": "3589:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3577:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3577:3:2"
																		},
																		"nativeSrc": "3577:15:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3577:15:2"
																	},
																	{
																		"hexValue": "6572",
																		"kind": "string",
																		"nativeSrc": "3594:4:2",
																		"nodeType": "YulLiteral",
																		"src": "3594:4:2",
																		"type": "",
																		"value": "er"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3570:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3570:6:2"
																},
																"nativeSrc": "3570:29:2",
																"nodeType": "YulFunctionCall",
																"src": "3570:29:2"
															},
															"nativeSrc": "3570:29:2",
															"nodeType": "YulExpressionStatement",
															"src": "3570:29:2"
														}
													]
												},
												"name": "store_literal_in_memory_1fe84a216921d591bc65562541187346421d15d084c4db140a9b25a310deb0f4",
												"nativeSrc": "3385:221:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3483:6:2",
														"nodeType": "YulTypedName",
														"src": "3483:6:2",
														"type": ""
													}
												],
												"src": "3385:221:2"
											},
											{
												"body": {
													"nativeSrc": "3758:220:2",
													"nodeType": "YulBlock",
													"src": "3758:220:2",
													"statements": [
														{
															"nativeSrc": "3768:74:2",
															"nodeType": "YulAssignment",
															"src": "3768:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3834:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3834:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3839:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3839:2:2",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3775:58:2",
																	"nodeType": "YulIdentifier",
																	"src": "3775:58:2"
																},
																"nativeSrc": "3775:67:2",
																"nodeType": "YulFunctionCall",
																"src": "3775:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3768:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3768:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3940:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3940:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1fe84a216921d591bc65562541187346421d15d084c4db140a9b25a310deb0f4",
																	"nativeSrc": "3851:88:2",
																	"nodeType": "YulIdentifier",
																	"src": "3851:88:2"
																},
																"nativeSrc": "3851:93:2",
																"nodeType": "YulFunctionCall",
																"src": "3851:93:2"
															},
															"nativeSrc": "3851:93:2",
															"nodeType": "YulExpressionStatement",
															"src": "3851:93:2"
														},
														{
															"nativeSrc": "3953:19:2",
															"nodeType": "YulAssignment",
															"src": "3953:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3964:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3964:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3969:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3969:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3960:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3960:3:2"
																},
																"nativeSrc": "3960:12:2",
																"nodeType": "YulFunctionCall",
																"src": "3960:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3953:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3953:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1fe84a216921d591bc65562541187346421d15d084c4db140a9b25a310deb0f4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3612:366:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3746:3:2",
														"nodeType": "YulTypedName",
														"src": "3746:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3754:3:2",
														"nodeType": "YulTypedName",
														"src": "3754:3:2",
														"type": ""
													}
												],
												"src": "3612:366:2"
											},
											{
												"body": {
													"nativeSrc": "4155:248:2",
													"nodeType": "YulBlock",
													"src": "4155:248:2",
													"statements": [
														{
															"nativeSrc": "4165:26:2",
															"nodeType": "YulAssignment",
															"src": "4165:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4177:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "4177:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4188:2:2",
																		"nodeType": "YulLiteral",
																		"src": "4188:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4173:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "4173:3:2"
																},
																"nativeSrc": "4173:18:2",
																"nodeType": "YulFunctionCall",
																"src": "4173:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4165:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "4165:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4212:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "4212:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4223:1:2",
																				"nodeType": "YulLiteral",
																				"src": "4223:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4208:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "4208:3:2"
																		},
																		"nativeSrc": "4208:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4208:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4231:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "4231:4:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4237:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "4237:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4227:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "4227:3:2"
																		},
																		"nativeSrc": "4227:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4227:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4201:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "4201:6:2"
																},
																"nativeSrc": "4201:47:2",
																"nodeType": "YulFunctionCall",
																"src": "4201:47:2"
															},
															"nativeSrc": "4201:47:2",
															"nodeType": "YulExpressionStatement",
															"src": "4201:47:2"
														},
														{
															"nativeSrc": "4257:139:2",
															"nodeType": "YulAssignment",
															"src": "4257:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4391:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "4391:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1fe84a216921d591bc65562541187346421d15d084c4db140a9b25a310deb0f4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4265:124:2",
																	"nodeType": "YulIdentifier",
																	"src": "4265:124:2"
																},
																"nativeSrc": "4265:131:2",
																"nodeType": "YulFunctionCall",
																"src": "4265:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4257:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "4257:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1fe84a216921d591bc65562541187346421d15d084c4db140a9b25a310deb0f4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3984:419:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4135:9:2",
														"nodeType": "YulTypedName",
														"src": "4135:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4150:4:2",
														"nodeType": "YulTypedName",
														"src": "4150:4:2",
														"type": ""
													}
												],
												"src": "3984:419:2"
											},
											{
												"body": {
													"nativeSrc": "4515:118:2",
													"nodeType": "YulBlock",
													"src": "4515:118:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4537:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "4537:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4545:1:2",
																				"nodeType": "YulLiteral",
																				"src": "4545:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4533:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "4533:3:2"
																		},
																		"nativeSrc": "4533:14:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4533:14:2"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e7320746f20737465616c2066726f6d206c6f776573742068",
																		"kind": "string",
																		"nativeSrc": "4549:34:2",
																		"nodeType": "YulLiteral",
																		"src": "4549:34:2",
																		"type": "",
																		"value": "No tokens to steal from lowest h"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4526:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "4526:6:2"
																},
																"nativeSrc": "4526:58:2",
																"nodeType": "YulFunctionCall",
																"src": "4526:58:2"
															},
															"nativeSrc": "4526:58:2",
															"nodeType": "YulExpressionStatement",
															"src": "4526:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4605:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "4605:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4613:2:2",
																				"nodeType": "YulLiteral",
																				"src": "4613:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4601:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "4601:3:2"
																		},
																		"nativeSrc": "4601:15:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4601:15:2"
																	},
																	{
																		"hexValue": "6f6c646572",
																		"kind": "string",
																		"nativeSrc": "4618:7:2",
																		"nodeType": "YulLiteral",
																		"src": "4618:7:2",
																		"type": "",
																		"value": "older"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4594:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "4594:6:2"
																},
																"nativeSrc": "4594:32:2",
																"nodeType": "YulFunctionCall",
																"src": "4594:32:2"
															},
															"nativeSrc": "4594:32:2",
															"nodeType": "YulExpressionStatement",
															"src": "4594:32:2"
														}
													]
												},
												"name": "store_literal_in_memory_06b580f149ea53acfb705529974e2939ecc187f521fc291a73b1b28e523f4804",
												"nativeSrc": "4409:224:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4507:6:2",
														"nodeType": "YulTypedName",
														"src": "4507:6:2",
														"type": ""
													}
												],
												"src": "4409:224:2"
											},
											{
												"body": {
													"nativeSrc": "4785:220:2",
													"nodeType": "YulBlock",
													"src": "4785:220:2",
													"statements": [
														{
															"nativeSrc": "4795:74:2",
															"nodeType": "YulAssignment",
															"src": "4795:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4861:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "4861:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4866:2:2",
																		"nodeType": "YulLiteral",
																		"src": "4866:2:2",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4802:58:2",
																	"nodeType": "YulIdentifier",
																	"src": "4802:58:2"
																},
																"nativeSrc": "4802:67:2",
																"nodeType": "YulFunctionCall",
																"src": "4802:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4795:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "4795:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4967:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "4967:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_06b580f149ea53acfb705529974e2939ecc187f521fc291a73b1b28e523f4804",
																	"nativeSrc": "4878:88:2",
																	"nodeType": "YulIdentifier",
																	"src": "4878:88:2"
																},
																"nativeSrc": "4878:93:2",
																"nodeType": "YulFunctionCall",
																"src": "4878:93:2"
															},
															"nativeSrc": "4878:93:2",
															"nodeType": "YulExpressionStatement",
															"src": "4878:93:2"
														},
														{
															"nativeSrc": "4980:19:2",
															"nodeType": "YulAssignment",
															"src": "4980:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4991:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "4991:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4996:2:2",
																		"nodeType": "YulLiteral",
																		"src": "4996:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4987:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "4987:3:2"
																},
																"nativeSrc": "4987:12:2",
																"nodeType": "YulFunctionCall",
																"src": "4987:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4980:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "4980:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_06b580f149ea53acfb705529974e2939ecc187f521fc291a73b1b28e523f4804_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4639:366:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4773:3:2",
														"nodeType": "YulTypedName",
														"src": "4773:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4781:3:2",
														"nodeType": "YulTypedName",
														"src": "4781:3:2",
														"type": ""
													}
												],
												"src": "4639:366:2"
											},
											{
												"body": {
													"nativeSrc": "5182:248:2",
													"nodeType": "YulBlock",
													"src": "5182:248:2",
													"statements": [
														{
															"nativeSrc": "5192:26:2",
															"nodeType": "YulAssignment",
															"src": "5192:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5204:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "5204:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5215:2:2",
																		"nodeType": "YulLiteral",
																		"src": "5215:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5200:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "5200:3:2"
																},
																"nativeSrc": "5200:18:2",
																"nodeType": "YulFunctionCall",
																"src": "5200:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5192:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "5192:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5239:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "5239:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5250:1:2",
																				"nodeType": "YulLiteral",
																				"src": "5250:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5235:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "5235:3:2"
																		},
																		"nativeSrc": "5235:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "5235:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5258:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "5258:4:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5264:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "5264:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5254:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "5254:3:2"
																		},
																		"nativeSrc": "5254:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "5254:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5228:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "5228:6:2"
																},
																"nativeSrc": "5228:47:2",
																"nodeType": "YulFunctionCall",
																"src": "5228:47:2"
															},
															"nativeSrc": "5228:47:2",
															"nodeType": "YulExpressionStatement",
															"src": "5228:47:2"
														},
														{
															"nativeSrc": "5284:139:2",
															"nodeType": "YulAssignment",
															"src": "5284:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5418:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "5418:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_06b580f149ea53acfb705529974e2939ecc187f521fc291a73b1b28e523f4804_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5292:124:2",
																	"nodeType": "YulIdentifier",
																	"src": "5292:124:2"
																},
																"nativeSrc": "5292:131:2",
																"nodeType": "YulFunctionCall",
																"src": "5292:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5284:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "5284:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_06b580f149ea53acfb705529974e2939ecc187f521fc291a73b1b28e523f4804__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5011:419:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5162:9:2",
														"nodeType": "YulTypedName",
														"src": "5162:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5177:4:2",
														"nodeType": "YulTypedName",
														"src": "5177:4:2",
														"type": ""
													}
												],
												"src": "5011:419:2"
											},
											{
												"body": {
													"nativeSrc": "5542:124:2",
													"nodeType": "YulBlock",
													"src": "5542:124:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5564:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "5564:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5572:1:2",
																				"nodeType": "YulLiteral",
																				"src": "5572:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5560:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "5560:3:2"
																		},
																		"nativeSrc": "5560:14:2",
																		"nodeType": "YulFunctionCall",
																		"src": "5560:14:2"
																	},
																	{
																		"hexValue": "4c6f776573742062616c616e6365206973206e6f74206c657373207468616e20",
																		"kind": "string",
																		"nativeSrc": "5576:34:2",
																		"nodeType": "YulLiteral",
																		"src": "5576:34:2",
																		"type": "",
																		"value": "Lowest balance is not less than "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5553:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "5553:6:2"
																},
																"nativeSrc": "5553:58:2",
																"nodeType": "YulFunctionCall",
																"src": "5553:58:2"
															},
															"nativeSrc": "5553:58:2",
															"nodeType": "YulExpressionStatement",
															"src": "5553:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5632:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "5632:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5640:2:2",
																				"nodeType": "YulLiteral",
																				"src": "5640:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5628:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "5628:3:2"
																		},
																		"nativeSrc": "5628:15:2",
																		"nodeType": "YulFunctionCall",
																		"src": "5628:15:2"
																	},
																	{
																		"hexValue": "746f702062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "5645:13:2",
																		"nodeType": "YulLiteral",
																		"src": "5645:13:2",
																		"type": "",
																		"value": "top balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5621:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "5621:6:2"
																},
																"nativeSrc": "5621:38:2",
																"nodeType": "YulFunctionCall",
																"src": "5621:38:2"
															},
															"nativeSrc": "5621:38:2",
															"nodeType": "YulExpressionStatement",
															"src": "5621:38:2"
														}
													]
												},
												"name": "store_literal_in_memory_575628dea368647ba253efd2c10d4b50c2c82c9ce583c6699f6b9a64c8dff116",
												"nativeSrc": "5436:230:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5534:6:2",
														"nodeType": "YulTypedName",
														"src": "5534:6:2",
														"type": ""
													}
												],
												"src": "5436:230:2"
											},
											{
												"body": {
													"nativeSrc": "5818:220:2",
													"nodeType": "YulBlock",
													"src": "5818:220:2",
													"statements": [
														{
															"nativeSrc": "5828:74:2",
															"nodeType": "YulAssignment",
															"src": "5828:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5894:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "5894:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5899:2:2",
																		"nodeType": "YulLiteral",
																		"src": "5899:2:2",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5835:58:2",
																	"nodeType": "YulIdentifier",
																	"src": "5835:58:2"
																},
																"nativeSrc": "5835:67:2",
																"nodeType": "YulFunctionCall",
																"src": "5835:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5828:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "5828:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6000:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "6000:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_575628dea368647ba253efd2c10d4b50c2c82c9ce583c6699f6b9a64c8dff116",
																	"nativeSrc": "5911:88:2",
																	"nodeType": "YulIdentifier",
																	"src": "5911:88:2"
																},
																"nativeSrc": "5911:93:2",
																"nodeType": "YulFunctionCall",
																"src": "5911:93:2"
															},
															"nativeSrc": "5911:93:2",
															"nodeType": "YulExpressionStatement",
															"src": "5911:93:2"
														},
														{
															"nativeSrc": "6013:19:2",
															"nodeType": "YulAssignment",
															"src": "6013:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6024:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "6024:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6029:2:2",
																		"nodeType": "YulLiteral",
																		"src": "6029:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6020:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "6020:3:2"
																},
																"nativeSrc": "6020:12:2",
																"nodeType": "YulFunctionCall",
																"src": "6020:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6013:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "6013:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_575628dea368647ba253efd2c10d4b50c2c82c9ce583c6699f6b9a64c8dff116_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5672:366:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5806:3:2",
														"nodeType": "YulTypedName",
														"src": "5806:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5814:3:2",
														"nodeType": "YulTypedName",
														"src": "5814:3:2",
														"type": ""
													}
												],
												"src": "5672:366:2"
											},
											{
												"body": {
													"nativeSrc": "6215:248:2",
													"nodeType": "YulBlock",
													"src": "6215:248:2",
													"statements": [
														{
															"nativeSrc": "6225:26:2",
															"nodeType": "YulAssignment",
															"src": "6225:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6237:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "6237:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6248:2:2",
																		"nodeType": "YulLiteral",
																		"src": "6248:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6233:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "6233:3:2"
																},
																"nativeSrc": "6233:18:2",
																"nodeType": "YulFunctionCall",
																"src": "6233:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6225:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "6225:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6272:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "6272:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6283:1:2",
																				"nodeType": "YulLiteral",
																				"src": "6283:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6268:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "6268:3:2"
																		},
																		"nativeSrc": "6268:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "6268:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6291:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "6291:4:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6297:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "6297:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6287:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "6287:3:2"
																		},
																		"nativeSrc": "6287:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "6287:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6261:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "6261:6:2"
																},
																"nativeSrc": "6261:47:2",
																"nodeType": "YulFunctionCall",
																"src": "6261:47:2"
															},
															"nativeSrc": "6261:47:2",
															"nodeType": "YulExpressionStatement",
															"src": "6261:47:2"
														},
														{
															"nativeSrc": "6317:139:2",
															"nodeType": "YulAssignment",
															"src": "6317:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6451:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "6451:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_575628dea368647ba253efd2c10d4b50c2c82c9ce583c6699f6b9a64c8dff116_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6325:124:2",
																	"nodeType": "YulIdentifier",
																	"src": "6325:124:2"
																},
																"nativeSrc": "6325:131:2",
																"nodeType": "YulFunctionCall",
																"src": "6325:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6317:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "6317:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_575628dea368647ba253efd2c10d4b50c2c82c9ce583c6699f6b9a64c8dff116__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6044:419:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6195:9:2",
														"nodeType": "YulTypedName",
														"src": "6195:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6210:4:2",
														"nodeType": "YulTypedName",
														"src": "6210:4:2",
														"type": ""
													}
												],
												"src": "6044:419:2"
											},
											{
												"body": {
													"nativeSrc": "6497:152:2",
													"nodeType": "YulBlock",
													"src": "6497:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6514:1:2",
																		"nodeType": "YulLiteral",
																		"src": "6514:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6517:77:2",
																		"nodeType": "YulLiteral",
																		"src": "6517:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6507:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "6507:6:2"
																},
																"nativeSrc": "6507:88:2",
																"nodeType": "YulFunctionCall",
																"src": "6507:88:2"
															},
															"nativeSrc": "6507:88:2",
															"nodeType": "YulExpressionStatement",
															"src": "6507:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6611:1:2",
																		"nodeType": "YulLiteral",
																		"src": "6611:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6614:4:2",
																		"nodeType": "YulLiteral",
																		"src": "6614:4:2",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6604:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "6604:6:2"
																},
																"nativeSrc": "6604:15:2",
																"nodeType": "YulFunctionCall",
																"src": "6604:15:2"
															},
															"nativeSrc": "6604:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "6604:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6635:1:2",
																		"nodeType": "YulLiteral",
																		"src": "6635:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6638:4:2",
																		"nodeType": "YulLiteral",
																		"src": "6638:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6628:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "6628:6:2"
																},
																"nativeSrc": "6628:15:2",
																"nodeType": "YulFunctionCall",
																"src": "6628:15:2"
															},
															"nativeSrc": "6628:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "6628:15:2"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "6469:180:2",
												"nodeType": "YulFunctionDefinition",
												"src": "6469:180:2"
											},
											{
												"body": {
													"nativeSrc": "6683:152:2",
													"nodeType": "YulBlock",
													"src": "6683:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6700:1:2",
																		"nodeType": "YulLiteral",
																		"src": "6700:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6703:77:2",
																		"nodeType": "YulLiteral",
																		"src": "6703:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6693:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "6693:6:2"
																},
																"nativeSrc": "6693:88:2",
																"nodeType": "YulFunctionCall",
																"src": "6693:88:2"
															},
															"nativeSrc": "6693:88:2",
															"nodeType": "YulExpressionStatement",
															"src": "6693:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6797:1:2",
																		"nodeType": "YulLiteral",
																		"src": "6797:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6800:4:2",
																		"nodeType": "YulLiteral",
																		"src": "6800:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6790:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "6790:6:2"
																},
																"nativeSrc": "6790:15:2",
																"nodeType": "YulFunctionCall",
																"src": "6790:15:2"
															},
															"nativeSrc": "6790:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "6790:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6821:1:2",
																		"nodeType": "YulLiteral",
																		"src": "6821:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6824:4:2",
																		"nodeType": "YulLiteral",
																		"src": "6824:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6814:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "6814:6:2"
																},
																"nativeSrc": "6814:15:2",
																"nodeType": "YulFunctionCall",
																"src": "6814:15:2"
															},
															"nativeSrc": "6814:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "6814:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "6655:180:2",
												"nodeType": "YulFunctionDefinition",
												"src": "6655:180:2"
											},
											{
												"body": {
													"nativeSrc": "6869:152:2",
													"nodeType": "YulBlock",
													"src": "6869:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6886:1:2",
																		"nodeType": "YulLiteral",
																		"src": "6886:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6889:77:2",
																		"nodeType": "YulLiteral",
																		"src": "6889:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6879:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "6879:6:2"
																},
																"nativeSrc": "6879:88:2",
																"nodeType": "YulFunctionCall",
																"src": "6879:88:2"
															},
															"nativeSrc": "6879:88:2",
															"nodeType": "YulExpressionStatement",
															"src": "6879:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6983:1:2",
																		"nodeType": "YulLiteral",
																		"src": "6983:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6986:4:2",
																		"nodeType": "YulLiteral",
																		"src": "6986:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6976:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "6976:6:2"
																},
																"nativeSrc": "6976:15:2",
																"nodeType": "YulFunctionCall",
																"src": "6976:15:2"
															},
															"nativeSrc": "6976:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "6976:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7007:1:2",
																		"nodeType": "YulLiteral",
																		"src": "7007:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7010:4:2",
																		"nodeType": "YulLiteral",
																		"src": "7010:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7000:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "7000:6:2"
																},
																"nativeSrc": "7000:15:2",
																"nodeType": "YulFunctionCall",
																"src": "7000:15:2"
															},
															"nativeSrc": "7000:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "7000:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6841:180:2",
												"nodeType": "YulFunctionDefinition",
												"src": "6841:180:2"
											},
											{
												"body": {
													"nativeSrc": "7069:143:2",
													"nodeType": "YulBlock",
													"src": "7069:143:2",
													"statements": [
														{
															"nativeSrc": "7079:25:2",
															"nodeType": "YulAssignment",
															"src": "7079:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7102:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "7102:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7084:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "7084:17:2"
																},
																"nativeSrc": "7084:20:2",
																"nodeType": "YulFunctionCall",
																"src": "7084:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7079:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "7079:1:2"
																}
															]
														},
														{
															"nativeSrc": "7113:25:2",
															"nodeType": "YulAssignment",
															"src": "7113:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7136:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "7136:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7118:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "7118:17:2"
																},
																"nativeSrc": "7118:20:2",
																"nodeType": "YulFunctionCall",
																"src": "7118:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7113:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "7113:1:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7160:22:2",
																"nodeType": "YulBlock",
																"src": "7160:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "7162:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "7162:16:2"
																			},
																			"nativeSrc": "7162:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "7162:18:2"
																		},
																		"nativeSrc": "7162:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "7162:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7157:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "7157:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7150:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "7150:6:2"
																},
																"nativeSrc": "7150:9:2",
																"nodeType": "YulFunctionCall",
																"src": "7150:9:2"
															},
															"nativeSrc": "7147:35:2",
															"nodeType": "YulIf",
															"src": "7147:35:2"
														},
														{
															"nativeSrc": "7192:14:2",
															"nodeType": "YulAssignment",
															"src": "7192:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7201:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "7201:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7204:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "7204:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7197:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "7197:3:2"
																},
																"nativeSrc": "7197:9:2",
																"nodeType": "YulFunctionCall",
																"src": "7197:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7192:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "7192:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "7027:185:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7058:1:2",
														"nodeType": "YulTypedName",
														"src": "7058:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7061:1:2",
														"nodeType": "YulTypedName",
														"src": "7061:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "7067:1:2",
														"nodeType": "YulTypedName",
														"src": "7067:1:2",
														"type": ""
													}
												],
												"src": "7027:185:2"
											},
											{
												"body": {
													"nativeSrc": "7263:149:2",
													"nodeType": "YulBlock",
													"src": "7263:149:2",
													"statements": [
														{
															"nativeSrc": "7273:25:2",
															"nodeType": "YulAssignment",
															"src": "7273:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7296:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "7296:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7278:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "7278:17:2"
																},
																"nativeSrc": "7278:20:2",
																"nodeType": "YulFunctionCall",
																"src": "7278:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7273:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "7273:1:2"
																}
															]
														},
														{
															"nativeSrc": "7307:25:2",
															"nodeType": "YulAssignment",
															"src": "7307:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7330:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "7330:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7312:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "7312:17:2"
																},
																"nativeSrc": "7312:20:2",
																"nodeType": "YulFunctionCall",
																"src": "7312:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7307:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "7307:1:2"
																}
															]
														},
														{
															"nativeSrc": "7341:17:2",
															"nodeType": "YulAssignment",
															"src": "7341:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7353:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "7353:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7356:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "7356:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7349:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "7349:3:2"
																},
																"nativeSrc": "7349:9:2",
																"nodeType": "YulFunctionCall",
																"src": "7349:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "7341:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "7341:4:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7383:22:2",
																"nodeType": "YulBlock",
																"src": "7383:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7385:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "7385:16:2"
																			},
																			"nativeSrc": "7385:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "7385:18:2"
																		},
																		"nativeSrc": "7385:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "7385:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "7374:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "7374:4:2"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "7380:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "7380:1:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7371:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "7371:2:2"
																},
																"nativeSrc": "7371:11:2",
																"nodeType": "YulFunctionCall",
																"src": "7371:11:2"
															},
															"nativeSrc": "7368:37:2",
															"nodeType": "YulIf",
															"src": "7368:37:2"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7218:194:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7249:1:2",
														"nodeType": "YulTypedName",
														"src": "7249:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7252:1:2",
														"nodeType": "YulTypedName",
														"src": "7252:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7258:4:2",
														"nodeType": "YulTypedName",
														"src": "7258:4:2",
														"type": ""
													}
												],
												"src": "7218:194:2"
											},
											{
												"body": {
													"nativeSrc": "7462:147:2",
													"nodeType": "YulBlock",
													"src": "7462:147:2",
													"statements": [
														{
															"nativeSrc": "7472:25:2",
															"nodeType": "YulAssignment",
															"src": "7472:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7495:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "7495:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7477:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "7477:17:2"
																},
																"nativeSrc": "7477:20:2",
																"nodeType": "YulFunctionCall",
																"src": "7477:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7472:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "7472:1:2"
																}
															]
														},
														{
															"nativeSrc": "7506:25:2",
															"nodeType": "YulAssignment",
															"src": "7506:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7529:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "7529:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7511:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "7511:17:2"
																},
																"nativeSrc": "7511:20:2",
																"nodeType": "YulFunctionCall",
																"src": "7511:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7506:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "7506:1:2"
																}
															]
														},
														{
															"nativeSrc": "7540:16:2",
															"nodeType": "YulAssignment",
															"src": "7540:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7551:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "7551:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7554:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "7554:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7547:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "7547:3:2"
																},
																"nativeSrc": "7547:9:2",
																"nodeType": "YulFunctionCall",
																"src": "7547:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7540:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "7540:3:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7580:22:2",
																"nodeType": "YulBlock",
																"src": "7580:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7582:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "7582:16:2"
																			},
																			"nativeSrc": "7582:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "7582:18:2"
																		},
																		"nativeSrc": "7582:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "7582:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7572:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "7572:1:2"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7575:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "7575:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7569:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "7569:2:2"
																},
																"nativeSrc": "7569:10:2",
																"nodeType": "YulFunctionCall",
																"src": "7569:10:2"
															},
															"nativeSrc": "7566:36:2",
															"nodeType": "YulIf",
															"src": "7566:36:2"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7418:191:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7449:1:2",
														"nodeType": "YulTypedName",
														"src": "7449:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7452:1:2",
														"nodeType": "YulTypedName",
														"src": "7452:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7458:3:2",
														"nodeType": "YulTypedName",
														"src": "7458:3:2",
														"type": ""
													}
												],
												"src": "7418:191:2"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_1fe84a216921d591bc65562541187346421d15d084c4db140a9b25a310deb0f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens to steal from top hold\")\n\n        mstore(add(memPtr, 32), \"er\")\n\n    }\n\n    function abi_encode_t_stringliteral_1fe84a216921d591bc65562541187346421d15d084c4db140a9b25a310deb0f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_1fe84a216921d591bc65562541187346421d15d084c4db140a9b25a310deb0f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1fe84a216921d591bc65562541187346421d15d084c4db140a9b25a310deb0f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1fe84a216921d591bc65562541187346421d15d084c4db140a9b25a310deb0f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_06b580f149ea53acfb705529974e2939ecc187f521fc291a73b1b28e523f4804(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens to steal from lowest h\")\n\n        mstore(add(memPtr, 32), \"older\")\n\n    }\n\n    function abi_encode_t_stringliteral_06b580f149ea53acfb705529974e2939ecc187f521fc291a73b1b28e523f4804_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_06b580f149ea53acfb705529974e2939ecc187f521fc291a73b1b28e523f4804(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_06b580f149ea53acfb705529974e2939ecc187f521fc291a73b1b28e523f4804__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_06b580f149ea53acfb705529974e2939ecc187f521fc291a73b1b28e523f4804_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_575628dea368647ba253efd2c10d4b50c2c82c9ce583c6699f6b9a64c8dff116(memPtr) {\n\n        mstore(add(memPtr, 0), \"Lowest balance is not less than \")\n\n        mstore(add(memPtr, 32), \"top balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_575628dea368647ba253efd2c10d4b50c2c82c9ce583c6699f6b9a64c8dff116_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_575628dea368647ba253efd2c10d4b50c2c82c9ce583c6699f6b9a64c8dff116(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_575628dea368647ba253efd2c10d4b50c2c82c9ce583c6699f6b9a64c8dff116__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_575628dea368647ba253efd2c10d4b50c2c82c9ce583c6699f6b9a64c8dff116_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c806306fdde031461006757806318160ddd14610085578063313ce567146100a357806370a08231146100c15780638a8756ae146100f157806395d89b41146100fb575b600080fd5b61006f610119565b60405161007c9190610a01565b60405180910390f35b61008d610152565b60405161009a9190610a3c565b60405180910390f35b6100ab610158565b6040516100b89190610a73565b60405180910390f35b6100db60048036038101906100d69190610af1565b61015d565b6040516100e89190610a3c565b60405180910390f35b6100f96101a6565b005b6101036104b3565b6040516101109190610a01565b60405180910390f35b6040518060400160405280600b81526020017f537573686920546f6b656e00000000000000000000000000000000000000000081525081565b60005481565b600a81565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806101b16104ec565b915091506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161023c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023390610b90565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081116102c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ba90610c22565b60405180910390fd5b818110610305576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fc90610cb4565b60405180910390fd5b600061031b600a8461092f90919063ffffffff16565b905061036f81600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461094590919063ffffffff16565b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061040481600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461095b90919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104a49190610a3c565b60405180910390a35050505050565b6040518060400160405280600581526020017f535553484900000000000000000000000000000000000000000000000000000081525081565b600080600360008154811061050457610503610cd4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150600360008154811061054657610545610cd4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600060016000600360008154811061058e5761058d610cd4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600060016000600360008154811061061157610610610cd4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600190505b600380549050811015610928578260016000600384815481106106a6576106a5610cd4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411156107d4576003818154811061072657610725610cd4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169450600160006003838154811061076b5761076a610cd4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205492505b8160016000600384815481106107ed576107ec610cd4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561091b576003818154811061086d5761086c610cd4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16935060016000600383815481106108b2576108b1610cd4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505b8080600101915050610680565b5050509091565b6000818361093d9190610d61565b905092915050565b600081836109539190610d92565b905092915050565b600081836109699190610dc6565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156109ab578082015181840152602081019050610990565b60008484015250505050565b6000601f19601f8301169050919050565b60006109d382610971565b6109dd818561097c565b93506109ed81856020860161098d565b6109f6816109b7565b840191505092915050565b60006020820190508181036000830152610a1b81846109c8565b905092915050565b6000819050919050565b610a3681610a23565b82525050565b6000602082019050610a516000830184610a2d565b92915050565b600060ff82169050919050565b610a6d81610a57565b82525050565b6000602082019050610a886000830184610a64565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610abe82610a93565b9050919050565b610ace81610ab3565b8114610ad957600080fd5b50565b600081359050610aeb81610ac5565b92915050565b600060208284031215610b0757610b06610a8e565b5b6000610b1584828501610adc565b91505092915050565b7f4e6f20746f6b656e7320746f20737465616c2066726f6d20746f7020686f6c6460008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b6000610b7a60228361097c565b9150610b8582610b1e565b604082019050919050565b60006020820190508181036000830152610ba981610b6d565b9050919050565b7f4e6f20746f6b656e7320746f20737465616c2066726f6d206c6f77657374206860008201527f6f6c646572000000000000000000000000000000000000000000000000000000602082015250565b6000610c0c60258361097c565b9150610c1782610bb0565b604082019050919050565b60006020820190508181036000830152610c3b81610bff565b9050919050565b7f4c6f776573742062616c616e6365206973206e6f74206c657373207468616e2060008201527f746f702062616c616e6365000000000000000000000000000000000000000000602082015250565b6000610c9e602b8361097c565b9150610ca982610c42565b604082019050919050565b60006020820190508181036000830152610ccd81610c91565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d6c82610a23565b9150610d7783610a23565b925082610d8757610d86610d03565b5b828204905092915050565b6000610d9d82610a23565b9150610da883610a23565b9250828203905081811115610dc057610dbf610d32565b5b92915050565b6000610dd182610a23565b9150610ddc83610a23565b9250828201905080821115610df457610df3610d32565b5b9291505056fea2646970667358221220f19cacb23da66d2e8066ecbc2c8c10c22dc385f2e85181b34ef906857e2f42df64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x8A8756AE EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xFB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x119 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH2 0x152 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9A SWAP2 SWAP1 PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAB PUSH2 0x158 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0xA73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x15D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH2 0x1A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x103 PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110 SWAP2 SWAP1 PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x537573686920546F6B656E000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1B1 PUSH2 0x4EC JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x23C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x233 SWAP1 PUSH2 0xB90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x2C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BA SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FC SWAP1 PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x31B PUSH1 0xA DUP5 PUSH2 0x92F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x36F DUP2 PUSH1 0x1 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x945 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x404 DUP2 PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x95B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x4A4 SWAP2 SWAP1 PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5355534849000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x504 JUMPI PUSH2 0x503 PUSH2 0xCD4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x546 JUMPI PUSH2 0x545 PUSH2 0xCD4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x58E JUMPI PUSH2 0x58D PUSH2 0xCD4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x611 JUMPI PUSH2 0x610 PUSH2 0xCD4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x928 JUMPI DUP3 PUSH1 0x1 PUSH1 0x0 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x6A6 JUMPI PUSH2 0x6A5 PUSH2 0xCD4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x7D4 JUMPI PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x726 JUMPI PUSH2 0x725 PUSH2 0xCD4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP5 POP PUSH1 0x1 PUSH1 0x0 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x76B JUMPI PUSH2 0x76A PUSH2 0xCD4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP3 POP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x7ED JUMPI PUSH2 0x7EC PUSH2 0xCD4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x91B JUMPI PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x86D JUMPI PUSH2 0x86C PUSH2 0xCD4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP PUSH1 0x1 PUSH1 0x0 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x8B2 JUMPI PUSH2 0x8B1 PUSH2 0xCD4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x680 JUMP JUMPDEST POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x93D SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x953 SWAP2 SWAP1 PUSH2 0xD92 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x969 SWAP2 SWAP1 PUSH2 0xDC6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9AB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x990 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D3 DUP3 PUSH2 0x971 JUMP JUMPDEST PUSH2 0x9DD DUP2 DUP6 PUSH2 0x97C JUMP JUMPDEST SWAP4 POP PUSH2 0x9ED DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x98D JUMP JUMPDEST PUSH2 0x9F6 DUP2 PUSH2 0x9B7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA1B DUP2 DUP5 PUSH2 0x9C8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA36 DUP2 PUSH2 0xA23 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA51 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA6D DUP2 PUSH2 0xA57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA88 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xABE DUP3 PUSH2 0xA93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xACE DUP2 PUSH2 0xAB3 JUMP JUMPDEST DUP2 EQ PUSH2 0xAD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAEB DUP2 PUSH2 0xAC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB07 JUMPI PUSH2 0xB06 PUSH2 0xA8E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB15 DUP5 DUP3 DUP6 ADD PUSH2 0xADC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F20737465616C2066726F6D20746F7020686F6C64 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7A PUSH1 0x22 DUP4 PUSH2 0x97C JUMP JUMPDEST SWAP2 POP PUSH2 0xB85 DUP3 PUSH2 0xB1E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBA9 DUP2 PUSH2 0xB6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F20737465616C2066726F6D206C6F776573742068 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6C646572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC0C PUSH1 0x25 DUP4 PUSH2 0x97C JUMP JUMPDEST SWAP2 POP PUSH2 0xC17 DUP3 PUSH2 0xBB0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC3B DUP2 PUSH2 0xBFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C6F776573742062616C616E6365206973206E6F74206C657373207468616E20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x746F702062616C616E6365000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9E PUSH1 0x2B DUP4 PUSH2 0x97C JUMP JUMPDEST SWAP2 POP PUSH2 0xCA9 DUP3 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCCD DUP2 PUSH2 0xC91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD6C DUP3 PUSH2 0xA23 JUMP JUMPDEST SWAP2 POP PUSH2 0xD77 DUP4 PUSH2 0xA23 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xD87 JUMPI PUSH2 0xD86 PUSH2 0xD03 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD9D DUP3 PUSH2 0xA23 JUMP JUMPDEST SWAP2 POP PUSH2 0xDA8 DUP4 PUSH2 0xA23 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xDC0 JUMPI PUSH2 0xDBF PUSH2 0xD32 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD1 DUP3 PUSH2 0xA23 JUMP JUMPDEST SWAP2 POP PUSH2 0xDDC DUP4 PUSH2 0xA23 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDF4 JUMPI PUSH2 0xDF3 PUSH2 0xD32 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL SWAP13 0xAC 0xB2 RETURNDATASIZE 0xA6 PUSH14 0x2E8066ECBC2C8C10C22DC385F2E8 MLOAD DUP2 0xB3 0x4E 0xF9 MOD DUP6 PUSH31 0x2F42DF64736F6C634300081900330000000000000000000000000000000000 ",
							"sourceMap": "118:3093:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;247:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;177:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;317;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;906:107;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1620:716;;;:::i;:::-;;382:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;247:43;;;;;;;;;;;;;;;;;;;:::o;177:35::-;;;;:::o;317:::-;350:2;317:35;:::o;906:107::-;963:7;989:8;:17;998:7;989:17;;;;;;;;;;;;;;;;982:24;;906:107;;;:::o;1620:716::-;1671:11;1684:14;1702:25;:23;:25::i;:::-;1670:57;;;;1737:18;1758:8;:13;1767:3;1758:13;;;;;;;;;;;;;;;;1737:34;;1802:1;1789:10;:14;1781:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1852:21;1876:8;:16;1885:6;1876:16;;;;;;;;;;;;;;;;1852:40;;1926:1;1910:13;:17;1902:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2003:10;1987:13;:26;1979:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;2072:21;2096:18;2111:2;2096:10;:14;;:18;;;;:::i;:::-;2072:42;;2181:32;2199:13;2181:8;:13;2190:3;2181:13;;;;;;;;;;;;;;;;:17;;:32;;;;:::i;:::-;2165:8;:13;2174:3;2165:13;;;;;;;;;;;;;;;:48;;;;2242:35;2263:13;2242:8;:16;2251:6;2242:16;;;;;;;;;;;;;;;;:20;;:35;;;;:::i;:::-;2223:8;:16;2232:6;2223:16;;;;;;;;;;;;;;;:54;;;;2307:6;2293:36;;2302:3;2293:36;;;2315:13;2293:36;;;;;;:::i;:::-;;;;;;;;1660:676;;;;;1620:716::o;382:39::-;;;;;;;;;;;;;;;;;;;:::o;2429:702::-;2487:17;2506:20;2550:9;2560:1;2550:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2538:24;;2587:9;2597:1;2587:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2572:27;;2609:22;2634:8;:22;2643:9;2653:1;2643:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2634:22;;;;;;;;;;;;;;;;2609:47;;2666:21;2690:8;:22;2699:9;2709:1;2699:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2690:22;;;;;;;;;;;;;;;;2666:46;;2727:9;2739:1;2727:13;;2722:403;2746:9;:16;;;;2742:1;:20;2722:403;;;2812:14;2787:8;:22;2796:9;2806:1;2796:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2787:22;;;;;;;;;;;;;;;;:39;2783:159;;;2858:9;2868:1;2858:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2846:24;;2905:8;:22;2914:9;2924:1;2914:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2905:22;;;;;;;;;;;;;;;;2888:39;;2783:159;2984:13;2959:8;:22;2968:9;2978:1;2968:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2959:22;;;;;;;;;;;;;;;;:38;2955:160;;;3032:9;3042:1;3032:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3017:27;;3078:8;:22;3087:9;3097:1;3087:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3078:22;;;;;;;;;;;;;;;;3062:38;;2955:160;2764:3;;;;;;;2722:403;;;;2528:603;;2429:702;;:::o;3850:96:0:-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;3122:::-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;7:99:2:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:248::-;369:1;379:113;393:6;390:1;387:13;379:113;;;478:1;473:3;469:11;463:18;459:1;454:3;450:11;443:39;415:2;412:1;408:10;403:15;;379:113;;;526:1;517:6;512:3;508:16;501:27;349:186;287:248;;;:::o;541:102::-;582:6;633:2;629:7;624:2;617:5;613:14;609:28;599:38;;541:102;;;:::o;649:377::-;737:3;765:39;798:5;765:39;:::i;:::-;820:71;884:6;879:3;820:71;:::i;:::-;813:78;;900:65;958:6;953:3;946:4;939:5;935:16;900:65;:::i;:::-;990:29;1012:6;990:29;:::i;:::-;985:3;981:39;974:46;;741:285;649:377;;;;:::o;1032:313::-;1145:4;1183:2;1172:9;1168:18;1160:26;;1232:9;1226:4;1222:20;1218:1;1207:9;1203:17;1196:47;1260:78;1333:4;1324:6;1260:78;:::i;:::-;1252:86;;1032:313;;;;:::o;1351:77::-;1388:7;1417:5;1406:16;;1351:77;;;:::o;1434:118::-;1521:24;1539:5;1521:24;:::i;:::-;1516:3;1509:37;1434:118;;:::o;1558:222::-;1651:4;1689:2;1678:9;1674:18;1666:26;;1702:71;1770:1;1759:9;1755:17;1746:6;1702:71;:::i;:::-;1558:222;;;;:::o;1786:86::-;1821:7;1861:4;1854:5;1850:16;1839:27;;1786:86;;;:::o;1878:112::-;1961:22;1977:5;1961:22;:::i;:::-;1956:3;1949:35;1878:112;;:::o;1996:214::-;2085:4;2123:2;2112:9;2108:18;2100:26;;2136:67;2200:1;2189:9;2185:17;2176:6;2136:67;:::i;:::-;1996:214;;;;:::o;2297:117::-;2406:1;2403;2396:12;2543:126;2580:7;2620:42;2613:5;2609:54;2598:65;;2543:126;;;:::o;2675:96::-;2712:7;2741:24;2759:5;2741:24;:::i;:::-;2730:35;;2675:96;;;:::o;2777:122::-;2850:24;2868:5;2850:24;:::i;:::-;2843:5;2840:35;2830:63;;2889:1;2886;2879:12;2830:63;2777:122;:::o;2905:139::-;2951:5;2989:6;2976:20;2967:29;;3005:33;3032:5;3005:33;:::i;:::-;2905:139;;;;:::o;3050:329::-;3109:6;3158:2;3146:9;3137:7;3133:23;3129:32;3126:119;;;3164:79;;:::i;:::-;3126:119;3284:1;3309:53;3354:7;3345:6;3334:9;3330:22;3309:53;:::i;:::-;3299:63;;3255:117;3050:329;;;;:::o;3385:221::-;3525:34;3521:1;3513:6;3509:14;3502:58;3594:4;3589:2;3581:6;3577:15;3570:29;3385:221;:::o;3612:366::-;3754:3;3775:67;3839:2;3834:3;3775:67;:::i;:::-;3768:74;;3851:93;3940:3;3851:93;:::i;:::-;3969:2;3964:3;3960:12;3953:19;;3612:366;;;:::o;3984:419::-;4150:4;4188:2;4177:9;4173:18;4165:26;;4237:9;4231:4;4227:20;4223:1;4212:9;4208:17;4201:47;4265:131;4391:4;4265:131;:::i;:::-;4257:139;;3984:419;;;:::o;4409:224::-;4549:34;4545:1;4537:6;4533:14;4526:58;4618:7;4613:2;4605:6;4601:15;4594:32;4409:224;:::o;4639:366::-;4781:3;4802:67;4866:2;4861:3;4802:67;:::i;:::-;4795:74;;4878:93;4967:3;4878:93;:::i;:::-;4996:2;4991:3;4987:12;4980:19;;4639:366;;;:::o;5011:419::-;5177:4;5215:2;5204:9;5200:18;5192:26;;5264:9;5258:4;5254:20;5250:1;5239:9;5235:17;5228:47;5292:131;5418:4;5292:131;:::i;:::-;5284:139;;5011:419;;;:::o;5436:230::-;5576:34;5572:1;5564:6;5560:14;5553:58;5645:13;5640:2;5632:6;5628:15;5621:38;5436:230;:::o;5672:366::-;5814:3;5835:67;5899:2;5894:3;5835:67;:::i;:::-;5828:74;;5911:93;6000:3;5911:93;:::i;:::-;6029:2;6024:3;6020:12;6013:19;;5672:366;;;:::o;6044:419::-;6210:4;6248:2;6237:9;6233:18;6225:26;;6297:9;6291:4;6287:20;6283:1;6272:9;6268:17;6261:47;6325:131;6451:4;6325:131;:::i;:::-;6317:139;;6044:419;;;:::o;6469:180::-;6517:77;6514:1;6507:88;6614:4;6611:1;6604:15;6638:4;6635:1;6628:15;6655:180;6703:77;6700:1;6693:88;6800:4;6797:1;6790:15;6824:4;6821:1;6814:15;6841:180;6889:77;6886:1;6879:88;6986:4;6983:1;6976:15;7010:4;7007:1;7000:15;7027:185;7067:1;7084:20;7102:1;7084:20;:::i;:::-;7079:25;;7118:20;7136:1;7118:20;:::i;:::-;7113:25;;7157:1;7147:35;;7162:18;;:::i;:::-;7147:35;7204:1;7201;7197:9;7192:14;;7027:185;;;;:::o;7218:194::-;7258:4;7278:20;7296:1;7278:20;:::i;:::-;7273:25;;7312:20;7330:1;7312:20;:::i;:::-;7307:25;;7356:1;7353;7349:9;7341:17;;7380:1;7374:4;7371:11;7368:37;;;7385:18;;:::i;:::-;7368:37;7218:194;;;;:::o;7418:191::-;7458:3;7477:20;7495:1;7477:20;:::i;:::-;7472:25;;7511:20;7529:1;7511:20;:::i;:::-;7506:25;;7554:1;7551;7547:9;7540:16;;7575:3;7572:1;7569:10;7566:36;;;7582:18;;:::i;:::-;7566:36;7418:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "726400",
								"executionCost": "107167",
								"totalCost": "833567"
							},
							"external": {
								"balanceOf(address)": "1585",
								"decimals()": "357",
								"name()": "infinite",
								"stealFromTopAndLowest()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1129"
							},
							"internal": {
								"findTopAndLowestHolders()": "infinite",
								"transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 118,
									"end": 3211,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 118,
									"end": 3211,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 118,
									"end": 3211,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 206,
									"end": 212,
									"name": "PUSH",
									"source": 1,
									"value": "9184E72A000"
								},
								{
									"begin": 177,
									"end": 212,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 212,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 666,
									"end": 865,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 666,
									"end": 865,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 666,
									"end": 865,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 666,
									"end": 865,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 666,
									"end": 865,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 666,
									"end": 865,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 666,
									"end": 865,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 666,
									"end": 865,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 666,
									"end": 865,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 666,
									"end": 865,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 666,
									"end": 865,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 714,
									"end": 725,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 714,
									"end": 725,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 691,
									"end": 699,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 691,
									"end": 711,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 700,
									"end": 710,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 691,
									"end": 711,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 691,
									"end": 711,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 691,
									"end": 711,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 691,
									"end": 711,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 691,
									"end": 711,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 691,
									"end": 711,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 691,
									"end": 711,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 691,
									"end": 711,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 691,
									"end": 711,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 691,
									"end": 711,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 691,
									"end": 711,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 691,
									"end": 711,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 691,
									"end": 711,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 691,
									"end": 711,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 691,
									"end": 711,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 691,
									"end": 725,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 691,
									"end": 725,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 691,
									"end": 725,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 691,
									"end": 725,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 758,
									"end": 762,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 735,
									"end": 743,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 735,
									"end": 755,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 754,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 735,
									"end": 755,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 735,
									"end": 755,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 735,
									"end": 755,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 735,
									"end": 755,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 735,
									"end": 755,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 735,
									"end": 755,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 735,
									"end": 755,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 735,
									"end": 755,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 735,
									"end": 755,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 735,
									"end": 755,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 735,
									"end": 755,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 735,
									"end": 755,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 735,
									"end": 755,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 735,
									"end": 755,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 755,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 735,
									"end": 755,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 762,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 735,
									"end": 762,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 735,
									"end": 762,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 735,
									"end": 762,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 735,
									"end": 762,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 735,
									"end": 762,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 735,
									"end": 762,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 735,
									"end": 762,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 735,
									"end": 762,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 735,
									"end": 762,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 735,
									"end": 762,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 735,
									"end": 762,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 735,
									"end": 762,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 735,
									"end": 762,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 735,
									"end": 762,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 735,
									"end": 762,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 735,
									"end": 762,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 735,
									"end": 762,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 772,
									"end": 781,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 787,
									"end": 797,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 772,
									"end": 798,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 772,
									"end": 798,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 772,
									"end": 798,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 772,
									"end": 798,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 772,
									"end": 798,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 772,
									"end": 798,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 772,
									"end": 798,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 772,
									"end": 798,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 772,
									"end": 798,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 772,
									"end": 798,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 834,
									"end": 844,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 813,
									"end": 858,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 813,
									"end": 858,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 858,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 813,
									"end": 858,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 813,
									"end": 858,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 846,
									"end": 857,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 846,
									"end": 857,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 813,
									"end": 858,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 813,
									"end": 858,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 813,
									"end": 858,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 813,
									"end": 858,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 813,
									"end": 858,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 813,
									"end": 858,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 813,
									"end": 858,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 813,
									"end": 858,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 813,
									"end": 858,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 813,
									"end": 858,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 813,
									"end": 858,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 813,
									"end": 858,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 813,
									"end": 858,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 813,
									"end": 858,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 813,
									"end": 858,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 813,
									"end": 858,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 118,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 118,
									"end": 3211,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 84,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 84,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 78,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 62,
									"end": 78,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 62,
									"end": 78,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 84,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7,
									"end": 84,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7,
									"end": 84,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 84,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 90,
									"end": 208,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 90,
									"end": 208,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 177,
									"end": 201,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 195,
									"end": 200,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 177,
									"end": 201,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 177,
									"end": 201,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 177,
									"end": 201,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 177,
									"end": 201,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 172,
									"end": 175,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 165,
									"end": 202,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 90,
									"end": 208,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 90,
									"end": 208,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 90,
									"end": 208,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 214,
									"end": 436,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 214,
									"end": 436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 307,
									"end": 311,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 345,
									"end": 347,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 343,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 330,
									"end": 348,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 322,
									"end": 348,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 322,
									"end": 348,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 358,
									"end": 429,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 426,
									"end": 427,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 424,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 411,
									"end": 428,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 402,
									"end": 408,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 358,
									"end": 429,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 358,
									"end": 429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 358,
									"end": 429,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 358,
									"end": 429,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 214,
									"end": 436,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 214,
									"end": 436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 214,
									"end": 436,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 214,
									"end": 436,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 214,
									"end": 436,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 118,
									"end": 3211,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 118,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 118,
									"end": 3211,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 118,
									"end": 3211,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 118,
									"end": 3211,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 118,
									"end": 3211,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 118,
									"end": 3211,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 118,
									"end": 3211,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 118,
									"end": 3211,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f19cacb23da66d2e8066ecbc2c8c10c22dc385f2e85181b34ef906857e2f42df64736f6c63430008190033",
									".code": [
										{
											"begin": 118,
											"end": 3211,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "PUSH",
											"source": 1,
											"value": "8A8756AE"
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 118,
											"end": 3211,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 247,
											"end": 290,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 247,
											"end": 290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 247,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 247,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 247,
											"end": 290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 247,
											"end": 290,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 247,
											"end": 290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 247,
											"end": 290,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 247,
											"end": 290,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 247,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 247,
											"end": 290,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 247,
											"end": 290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 247,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 247,
											"end": 290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 247,
											"end": 290,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 247,
											"end": 290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 247,
											"end": 290,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 247,
											"end": 290,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 247,
											"end": 290,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 247,
											"end": 290,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 247,
											"end": 290,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 247,
											"end": 290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 247,
											"end": 290,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 177,
											"end": 212,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 177,
											"end": 212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 177,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 177,
											"end": 212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 212,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 177,
											"end": 212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 212,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 212,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 177,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 177,
											"end": 212,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 212,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 177,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 177,
											"end": 212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 212,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 177,
											"end": 212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 212,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 212,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 177,
											"end": 212,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 177,
											"end": 212,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 212,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 177,
											"end": 212,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 177,
											"end": 212,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 317,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 317,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 317,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 317,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 317,
											"end": 352,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 317,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 317,
											"end": 352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 317,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 317,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 317,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 317,
											"end": 352,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 317,
											"end": 352,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 317,
											"end": 352,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 317,
											"end": 352,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 317,
											"end": 352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 317,
											"end": 352,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 906,
											"end": 1013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 906,
											"end": 1013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 906,
											"end": 1013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 2336,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1620,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1620,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1620,
											"end": 2336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 2336,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1620,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 2336,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 382,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 382,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 382,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 382,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 382,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 382,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 382,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 382,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 382,
											"end": 421,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 382,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 382,
											"end": 421,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 382,
											"end": 421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 382,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 382,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 382,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 382,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 382,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 382,
											"end": 421,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 382,
											"end": 421,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 382,
											"end": 421,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 382,
											"end": 421,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 382,
											"end": 421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 382,
											"end": 421,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 247,
											"end": 290,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 247,
											"end": 290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 247,
											"end": 290,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 247,
											"end": 290,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 247,
											"end": 290,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 247,
											"end": 290,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 247,
											"end": 290,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 247,
											"end": 290,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 247,
											"end": 290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 247,
											"end": 290,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 247,
											"end": 290,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 247,
											"end": 290,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 247,
											"end": 290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 247,
											"end": 290,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 247,
											"end": 290,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 247,
											"end": 290,
											"name": "PUSH",
											"source": 1,
											"value": "537573686920546F6B656E000000000000000000000000000000000000000000"
										},
										{
											"begin": 247,
											"end": 290,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 247,
											"end": 290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 247,
											"end": 290,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 247,
											"end": 290,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 247,
											"end": 290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 212,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 177,
											"end": 212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 212,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 212,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 177,
											"end": 212,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 317,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 350,
											"end": 352,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 317,
											"end": 352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 963,
											"end": 970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 997,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1005,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 982,
											"end": 1006,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 982,
											"end": 1006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 2336,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1620,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1682,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1684,
											"end": 1698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1702,
											"end": 1727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1727,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1702,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1727,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1727,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 1755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1758,
											"end": 1766,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1758,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1770,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1758,
											"end": 1771,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1758,
											"end": 1771,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1771,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1758,
											"end": 1771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1771,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1758,
											"end": 1771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1758,
											"end": 1771,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1771,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 1771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 1771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1803,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1803,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1781,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1781,
											"end": 1842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1781,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1781,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1781,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1781,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1781,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1781,
											"end": 1842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1842,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1842,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1781,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1852,
											"end": 1873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1884,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1876,
											"end": 1892,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1891,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1892,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1876,
											"end": 1892,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1892,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1876,
											"end": 1892,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1892,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1892,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1892,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1876,
											"end": 1892,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1892,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1892,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1892,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1876,
											"end": 1892,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1892,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1892,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1892,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1852,
											"end": 1892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1852,
											"end": 1892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1926,
											"end": 1927,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1902,
											"end": 1969,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1969,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1902,
											"end": 1969,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1969,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1902,
											"end": 1969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1969,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1969,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1902,
											"end": 1969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1902,
											"end": 1969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1902,
											"end": 1969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1969,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1902,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1969,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1902,
											"end": 1969,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1969,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1969,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1969,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1969,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1969,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1902,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 2000,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1979,
											"end": 2061,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2061,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1979,
											"end": 2061,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2061,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1979,
											"end": 2061,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2061,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2061,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1979,
											"end": 2061,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1979,
											"end": 2061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1979,
											"end": 2061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2061,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1979,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2061,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1979,
											"end": 2061,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2061,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2061,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2061,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2061,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2061,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1979,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2096,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2111,
											"end": 2113,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 2096,
											"end": 2106,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2096,
											"end": 2110,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2114,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2114,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2096,
											"end": 2114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2114,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2096,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2199,
											"end": 2212,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2189,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2181,
											"end": 2194,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2190,
											"end": 2193,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2194,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2181,
											"end": 2194,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2194,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2181,
											"end": 2194,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2194,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2194,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2194,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2181,
											"end": 2194,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2194,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2194,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2194,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2181,
											"end": 2194,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2194,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2181,
											"end": 2194,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2194,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2181,
											"end": 2198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2213,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2213,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2181,
											"end": 2213,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2213,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2181,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2173,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2174,
											"end": 2177,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2213,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2213,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2263,
											"end": 2276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2250,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2242,
											"end": 2258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2251,
											"end": 2257,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2258,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2242,
											"end": 2258,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2258,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2242,
											"end": 2258,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2258,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2242,
											"end": 2258,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2258,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2258,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2242,
											"end": 2258,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2242,
											"end": 2258,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2258,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2242,
											"end": 2262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2277,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2277,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2242,
											"end": 2277,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2277,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2242,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2231,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2223,
											"end": 2239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2232,
											"end": 2238,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2239,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2223,
											"end": 2239,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2239,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2223,
											"end": 2239,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2239,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2239,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2223,
											"end": 2239,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2239,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2239,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2239,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2223,
											"end": 2239,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2239,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2277,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2277,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2313,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2329,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2293,
											"end": 2329,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2305,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2329,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2293,
											"end": 2329,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2329,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2315,
											"end": 2328,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2329,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2293,
											"end": 2329,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2329,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2293,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2329,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2329,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2329,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2329,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2329,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 2336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 2336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 2336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 2336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 2336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 2336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 382,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 382,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 382,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 382,
											"end": 421,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 382,
											"end": 421,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 382,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 382,
											"end": 421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 382,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 382,
											"end": 421,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 382,
											"end": 421,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 382,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 382,
											"end": 421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 382,
											"end": 421,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 382,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 382,
											"end": 421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 382,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "5355534849000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 382,
											"end": 421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 382,
											"end": 421,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 382,
											"end": 421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 382,
											"end": 421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 382,
											"end": 421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2429,
											"end": 3131,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2429,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 2504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2560,
											"end": 2561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2550,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2596,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2597,
											"end": 2598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2587,
											"end": 2599,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2599,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2599,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2599,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2587,
											"end": 2599,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2587,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2587,
											"end": 2599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2599,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2587,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2599,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2587,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2599,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2599,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2587,
											"end": 2599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2599,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2587,
											"end": 2599,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2587,
											"end": 2599,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2599,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2599,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2587,
											"end": 2599,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2599,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2599,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2599,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2587,
											"end": 2599,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2599,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2599,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2599,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2587,
											"end": 2599,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2599,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2609,
											"end": 2631,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2642,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2634,
											"end": 2656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2643,
											"end": 2652,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2653,
											"end": 2654,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2643,
											"end": 2655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 2656,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2634,
											"end": 2656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 2656,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2634,
											"end": 2656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 2656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 2656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 2656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2634,
											"end": 2656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 2656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 2656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 2656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 2656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2634,
											"end": 2656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 2656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2656,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 2656,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2609,
											"end": 2656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2609,
											"end": 2656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2666,
											"end": 2687,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2690,
											"end": 2698,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2690,
											"end": 2712,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2708,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2709,
											"end": 2710,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2699,
											"end": 2711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2712,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2690,
											"end": 2712,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2712,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2690,
											"end": 2712,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2712,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2690,
											"end": 2712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2712,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2690,
											"end": 2712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2712,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2690,
											"end": 2712,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2712,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2666,
											"end": 2712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2666,
											"end": 2712,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2727,
											"end": 2736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2739,
											"end": 2740,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2727,
											"end": 2740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2727,
											"end": 2740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2722,
											"end": 3125,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2722,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2755,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2746,
											"end": 2762,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2762,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2743,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2762,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2722,
											"end": 3125,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2722,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2722,
											"end": 3125,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2812,
											"end": 2826,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2795,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2787,
											"end": 2809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2805,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2806,
											"end": 2807,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2796,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2809,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2787,
											"end": 2809,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2809,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2787,
											"end": 2809,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2809,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2809,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2809,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2787,
											"end": 2809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2809,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2809,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2809,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2809,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2787,
											"end": 2809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2787,
											"end": 2809,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2809,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2826,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2783,
											"end": 2942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2867,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2868,
											"end": 2869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2858,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2870,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2905,
											"end": 2927,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2923,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2924,
											"end": 2925,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2914,
											"end": 2926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2927,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2905,
											"end": 2927,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2927,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2905,
											"end": 2927,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2927,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2927,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2927,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2905,
											"end": 2927,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2927,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2927,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2927,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2905,
											"end": 2927,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2927,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2905,
											"end": 2927,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2927,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 2927,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 2927,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2942,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2783,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 2997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2959,
											"end": 2967,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2959,
											"end": 2981,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2978,
											"end": 2979,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2968,
											"end": 2980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2968,
											"end": 2980,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2959,
											"end": 2981,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2959,
											"end": 2981,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2959,
											"end": 2981,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2959,
											"end": 2981,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2959,
											"end": 2981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2959,
											"end": 2981,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2959,
											"end": 2981,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2959,
											"end": 2981,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2959,
											"end": 2981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2959,
											"end": 2981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2959,
											"end": 2981,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2959,
											"end": 2981,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2959,
											"end": 2981,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2959,
											"end": 2981,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2981,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2959,
											"end": 2981,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2955,
											"end": 3115,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2955,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2955,
											"end": 3115,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3041,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3042,
											"end": 3043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3032,
											"end": 3044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3044,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3078,
											"end": 3086,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3078,
											"end": 3100,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3087,
											"end": 3096,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3097,
											"end": 3098,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3087,
											"end": 3099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3078,
											"end": 3100,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3078,
											"end": 3100,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3078,
											"end": 3100,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3078,
											"end": 3100,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3078,
											"end": 3100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3078,
											"end": 3100,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3078,
											"end": 3100,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3078,
											"end": 3100,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3078,
											"end": 3100,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3078,
											"end": 3100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3078,
											"end": 3100,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3078,
											"end": 3100,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3078,
											"end": 3100,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3078,
											"end": 3100,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3078,
											"end": 3100,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3078,
											"end": 3100,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3062,
											"end": 3100,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3062,
											"end": 3100,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2955,
											"end": 3115,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2955,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2767,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2767,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2767,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2764,
											"end": 2767,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2767,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2767,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2767,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2722,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2722,
											"end": 3125,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2722,
											"end": 3125,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2722,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2722,
											"end": 3125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 3131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 3131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2429,
											"end": 3131,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2429,
											"end": 3131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2429,
											"end": 3131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 287,
											"end": 535,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 287,
											"end": 535,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 369,
											"end": 370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 393,
											"end": 399,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 390,
											"end": 391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 387,
											"end": 400,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 379,
											"end": 492,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 379,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 478,
											"end": 479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 473,
											"end": 476,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 469,
											"end": 480,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 463,
											"end": 481,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 459,
											"end": 460,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 454,
											"end": 457,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 450,
											"end": 461,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 443,
											"end": 482,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 415,
											"end": 417,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 412,
											"end": 413,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 408,
											"end": 418,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 403,
											"end": 418,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 403,
											"end": 418,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 379,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 379,
											"end": 492,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 523,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 512,
											"end": 515,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 508,
											"end": 524,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 501,
											"end": 528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 349,
											"end": 535,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 287,
											"end": 535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 541,
											"end": 643,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 541,
											"end": 643,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 582,
											"end": 588,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 629,
											"end": 636,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 617,
											"end": 622,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 613,
											"end": 627,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 609,
											"end": 637,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 599,
											"end": 637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 599,
											"end": 637,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 541,
											"end": 643,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 541,
											"end": 643,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 541,
											"end": 643,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 541,
											"end": 643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 737,
											"end": 740,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 765,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 798,
											"end": 803,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 765,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 765,
											"end": 804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 765,
											"end": 804,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 765,
											"end": 804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 820,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 879,
											"end": 882,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 820,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 820,
											"end": 891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 820,
											"end": 891,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 820,
											"end": 891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 813,
											"end": 891,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 813,
											"end": 891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 900,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 958,
											"end": 964,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 953,
											"end": 956,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 946,
											"end": 950,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 939,
											"end": 944,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 935,
											"end": 951,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 900,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 900,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 900,
											"end": 965,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 900,
											"end": 965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 990,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 985,
											"end": 988,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 741,
											"end": 1026,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 649,
											"end": 1026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1185,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1181,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1186,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1186,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1216,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1203,
											"end": 1220,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1196,
											"end": 1243,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1333,
											"end": 1337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1330,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1260,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1252,
											"end": 1338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1252,
											"end": 1338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1032,
											"end": 1345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1395,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1422,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1552,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1434,
											"end": 1552,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1539,
											"end": 1544,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1521,
											"end": 1545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1519,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1655,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1689,
											"end": 1691,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1678,
											"end": 1687,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1674,
											"end": 1692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1692,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1770,
											"end": 1771,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1768,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1755,
											"end": 1772,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1752,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1702,
											"end": 1773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1773,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1702,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 1872,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1786,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1821,
											"end": 1828,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1865,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1854,
											"end": 1859,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1839,
											"end": 1866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1839,
											"end": 1866,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 1872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 1872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 1872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 1872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1878,
											"end": 1990,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1878,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1961,
											"end": 1983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1961,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1956,
											"end": 1959,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1984,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1878,
											"end": 1990,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1878,
											"end": 1990,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1878,
											"end": 1990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2210,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1996,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2089,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2123,
											"end": 2125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2112,
											"end": 2121,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2126,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2126,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2126,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2136,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2200,
											"end": 2201,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2198,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2202,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2182,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2136,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2136,
											"end": 2203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2136,
											"end": 2203,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2136,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2210,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2210,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2210,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2210,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2297,
											"end": 2414,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2297,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2406,
											"end": 2407,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2404,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2396,
											"end": 2408,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2669,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2543,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2580,
											"end": 2587,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2662,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2613,
											"end": 2618,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2609,
											"end": 2663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2663,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2663,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2669,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2669,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2669,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2771,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2675,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2712,
											"end": 2719,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2741,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2759,
											"end": 2764,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2741,
											"end": 2765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2765,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2741,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2765,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2765,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2771,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2771,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2771,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2899,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2777,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2868,
											"end": 2873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2850,
											"end": 2874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2874,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2850,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2848,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2875,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2830,
											"end": 2893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2889,
											"end": 2890,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2886,
											"end": 2887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2891,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2893,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2830,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2905,
											"end": 3044,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2905,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2951,
											"end": 2956,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2995,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2976,
											"end": 2996,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2967,
											"end": 2996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2967,
											"end": 2996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 3032,
											"end": 3037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3005,
											"end": 3038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3038,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 3005,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2905,
											"end": 3044,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2905,
											"end": 3044,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2905,
											"end": 3044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2905,
											"end": 3044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2905,
											"end": 3044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3379,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3050,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3109,
											"end": 3115,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3158,
											"end": 3160,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3146,
											"end": 3155,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3137,
											"end": 3144,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3133,
											"end": 3156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3129,
											"end": 3161,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3126,
											"end": 3245,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3126,
											"end": 3245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3126,
											"end": 3245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3164,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 3164,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3164,
											"end": 3243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3164,
											"end": 3243,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 3164,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3126,
											"end": 3245,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3126,
											"end": 3245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3284,
											"end": 3285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3309,
											"end": 3362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 3354,
											"end": 3361,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3345,
											"end": 3351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3330,
											"end": 3352,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3309,
											"end": 3362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3309,
											"end": 3362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3309,
											"end": 3362,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 3309,
											"end": 3362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3379,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3606,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3385,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3559,
											"name": "PUSH",
											"source": 2,
											"value": "4E6F20746F6B656E7320746F20737465616C2066726F6D20746F7020686F6C64"
										},
										{
											"begin": 3521,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3519,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3502,
											"end": 3560,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3594,
											"end": 3598,
											"name": "PUSH",
											"source": 2,
											"value": "6572000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3589,
											"end": 3591,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3581,
											"end": 3587,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3599,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3606,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3978,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3612,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3757,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3775,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 3839,
											"end": 3841,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3834,
											"end": 3837,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3775,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3775,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3775,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 3775,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3851,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 3940,
											"end": 3943,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3851,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3851,
											"end": 3944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3851,
											"end": 3944,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 3851,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3971,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3964,
											"end": 3967,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3960,
											"end": 3972,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3972,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3978,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3978,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3984,
											"end": 4403,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3984,
											"end": 4403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4154,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4190,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4177,
											"end": 4186,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4191,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4246,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4227,
											"end": 4247,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4223,
											"end": 4224,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4212,
											"end": 4221,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4225,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4201,
											"end": 4248,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4265,
											"end": 4396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4396,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 4265,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4257,
											"end": 4396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4257,
											"end": 4396,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3984,
											"end": 4403,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3984,
											"end": 4403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3984,
											"end": 4403,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3984,
											"end": 4403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4409,
											"end": 4633,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4409,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4549,
											"end": 4583,
											"name": "PUSH",
											"source": 2,
											"value": "4E6F20746F6B656E7320746F20737465616C2066726F6D206C6F776573742068"
										},
										{
											"begin": 4545,
											"end": 4546,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4537,
											"end": 4543,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4533,
											"end": 4547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4526,
											"end": 4584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4618,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "6F6C646572000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4613,
											"end": 4615,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4605,
											"end": 4611,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4601,
											"end": 4616,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4594,
											"end": 4626,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4409,
											"end": 4633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4409,
											"end": 4633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4639,
											"end": 5005,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4639,
											"end": 5005,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4781,
											"end": 4784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4802,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 4866,
											"end": 4868,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4861,
											"end": 4864,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4802,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4802,
											"end": 4869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4802,
											"end": 4869,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 4802,
											"end": 4869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4795,
											"end": 4869,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4795,
											"end": 4869,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 4967,
											"end": 4970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4878,
											"end": 4971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4971,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 4878,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4996,
											"end": 4998,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4991,
											"end": 4994,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4987,
											"end": 4999,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4980,
											"end": 4999,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4980,
											"end": 4999,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4639,
											"end": 5005,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4639,
											"end": 5005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4639,
											"end": 5005,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4639,
											"end": 5005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5430,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5011,
											"end": 5430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5177,
											"end": 5181,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5217,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5213,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5200,
											"end": 5218,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5192,
											"end": 5218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5192,
											"end": 5218,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5273,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5258,
											"end": 5262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5254,
											"end": 5274,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5250,
											"end": 5251,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5239,
											"end": 5248,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5235,
											"end": 5252,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5275,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5292,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 5418,
											"end": 5422,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5292,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 5292,
											"end": 5423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5292,
											"end": 5423,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 5292,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5430,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5430,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5436,
											"end": 5666,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 5436,
											"end": 5666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5576,
											"end": 5610,
											"name": "PUSH",
											"source": 2,
											"value": "4C6F776573742062616C616E6365206973206E6F74206C657373207468616E20"
										},
										{
											"begin": 5572,
											"end": 5573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5564,
											"end": 5570,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5574,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5611,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5645,
											"end": 5658,
											"name": "PUSH",
											"source": 2,
											"value": "746F702062616C616E6365000000000000000000000000000000000000000000"
										},
										{
											"begin": 5640,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5632,
											"end": 5638,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5628,
											"end": 5643,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5621,
											"end": 5659,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5436,
											"end": 5666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5436,
											"end": 5666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 6038,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 5672,
											"end": 6038,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5814,
											"end": 5817,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5835,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 5899,
											"end": 5901,
											"name": "PUSH",
											"source": 2,
											"value": "2B"
										},
										{
											"begin": 5894,
											"end": 5897,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5835,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 5835,
											"end": 5902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5835,
											"end": 5902,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 5835,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5828,
											"end": 5902,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5828,
											"end": 5902,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5911,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 6000,
											"end": 6003,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5911,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 5911,
											"end": 6004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5911,
											"end": 6004,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 5911,
											"end": 6004,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6029,
											"end": 6031,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6024,
											"end": 6027,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6032,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6013,
											"end": 6032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6013,
											"end": 6032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 6038,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 6038,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 6038,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 6038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6044,
											"end": 6463,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 6044,
											"end": 6463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6210,
											"end": 6214,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6248,
											"end": 6250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6237,
											"end": 6246,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6251,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6225,
											"end": 6251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6225,
											"end": 6251,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6297,
											"end": 6306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6295,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6287,
											"end": 6307,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6283,
											"end": 6284,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6272,
											"end": 6281,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6268,
											"end": 6285,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6261,
											"end": 6308,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6325,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 6451,
											"end": 6455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6325,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 6325,
											"end": 6456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6325,
											"end": 6456,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 6325,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6044,
											"end": 6463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6044,
											"end": 6463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6044,
											"end": 6463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6044,
											"end": 6463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6469,
											"end": 6649,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 6469,
											"end": 6649,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6517,
											"end": 6594,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6514,
											"end": 6515,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6507,
											"end": 6595,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6614,
											"end": 6618,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 6611,
											"end": 6612,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6604,
											"end": 6619,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6638,
											"end": 6642,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6635,
											"end": 6636,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6643,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6655,
											"end": 6835,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6655,
											"end": 6835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6703,
											"end": 6780,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6700,
											"end": 6701,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6693,
											"end": 6781,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6800,
											"end": 6804,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 6797,
											"end": 6798,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6790,
											"end": 6805,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6828,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6821,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6814,
											"end": 6829,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6841,
											"end": 7021,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 6841,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6889,
											"end": 6966,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6886,
											"end": 6887,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6879,
											"end": 6967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6986,
											"end": 6990,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 6983,
											"end": 6984,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6976,
											"end": 6991,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7010,
											"end": 7014,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 7007,
											"end": 7008,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7000,
											"end": 7015,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7027,
											"end": 7212,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 7027,
											"end": 7212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7067,
											"end": 7068,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7084,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 7102,
											"end": 7103,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7084,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 7084,
											"end": 7104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7084,
											"end": 7104,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 7084,
											"end": 7104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7079,
											"end": 7104,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7079,
											"end": 7104,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7118,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 7136,
											"end": 7137,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7118,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 7118,
											"end": 7138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7118,
											"end": 7138,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 7118,
											"end": 7138,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7113,
											"end": 7138,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7113,
											"end": 7138,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7157,
											"end": 7158,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7147,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 7147,
											"end": 7182,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7162,
											"end": 7180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 7162,
											"end": 7180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 7162,
											"end": 7180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7162,
											"end": 7180,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 7162,
											"end": 7180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7147,
											"end": 7182,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 7147,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7204,
											"end": 7205,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7201,
											"end": 7202,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7197,
											"end": 7206,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 7192,
											"end": 7206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7192,
											"end": 7206,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7027,
											"end": 7212,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7027,
											"end": 7212,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7027,
											"end": 7212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7027,
											"end": 7212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7027,
											"end": 7212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7218,
											"end": 7412,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 7218,
											"end": 7412,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7258,
											"end": 7262,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7278,
											"end": 7298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 7296,
											"end": 7297,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7278,
											"end": 7298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 7278,
											"end": 7298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7278,
											"end": 7298,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 7278,
											"end": 7298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7273,
											"end": 7298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7273,
											"end": 7298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7312,
											"end": 7332,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 7330,
											"end": 7331,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7312,
											"end": 7332,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 7312,
											"end": 7332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7312,
											"end": 7332,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 7312,
											"end": 7332,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7307,
											"end": 7332,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7307,
											"end": 7332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7356,
											"end": 7357,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7353,
											"end": 7354,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7349,
											"end": 7358,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7341,
											"end": 7358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7341,
											"end": 7358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7380,
											"end": 7381,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7378,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7371,
											"end": 7382,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7385,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 7385,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 7385,
											"end": 7403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7385,
											"end": 7403,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 7385,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7218,
											"end": 7412,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7218,
											"end": 7412,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7218,
											"end": 7412,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7218,
											"end": 7412,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7218,
											"end": 7412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7418,
											"end": 7609,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 7418,
											"end": 7609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7461,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7477,
											"end": 7497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 7495,
											"end": 7496,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7477,
											"end": 7497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 7477,
											"end": 7497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7477,
											"end": 7497,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 7477,
											"end": 7497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7497,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7497,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7511,
											"end": 7531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 7529,
											"end": 7530,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7511,
											"end": 7531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 7511,
											"end": 7531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7511,
											"end": 7531,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 7511,
											"end": 7531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7506,
											"end": 7531,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7506,
											"end": 7531,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7554,
											"end": 7555,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7551,
											"end": 7552,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7547,
											"end": 7556,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7540,
											"end": 7556,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7540,
											"end": 7556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7575,
											"end": 7578,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7569,
											"end": 7579,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7566,
											"end": 7602,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7566,
											"end": 7602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 7566,
											"end": 7602,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7600,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 7582,
											"end": 7600,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 7582,
											"end": 7600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7600,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 7582,
											"end": 7600,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7566,
											"end": 7602,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 7566,
											"end": 7602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7418,
											"end": 7609,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7418,
											"end": 7609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7418,
											"end": 7609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7418,
											"end": 7609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7418,
											"end": 7609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"project/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"stealFromTopAndLowest()": "8a8756ae",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stealFromTopAndLowest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project/MyToken.sol\":\"SushiToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"project/MyToken.sol\":{\"keccak256\":\"0xbc0860143f5c6eaec0a61f6ad664508aaf54a0a477a7460a889d77f1e0a3a09d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a7b71f5760eaffdcadfcb283ca102f996609710e8bb8e082d1b2abc065ec1f9\",\"dweb:/ipfs/QmTRJFqPhqN52kEYqT2XcS8jKJBfZubDrRGrKyH2n5U2F5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 322,
								"contract": "project/MyToken.sol:SushiToken",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 335,
								"contract": "project/MyToken.sol:SushiToken",
								"label": "balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 339,
								"contract": "project/MyToken.sol:SushiToken",
								"label": "isHolder",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 342,
								"contract": "project/MyToken.sol:SushiToken",
								"label": "addresses",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "490:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "717:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "727:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "751:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "763:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "767:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "786:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "790:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "782:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "793:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "838:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "824:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "657:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "668:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "702:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "708:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:0"
									},
									"scope": 311,
									"src": "641:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1078:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1116:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1120:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1112:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1123:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1168:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1172:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1154:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1018:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1029:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1063:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1069:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:0"
									},
									"scope": 311,
									"src": "1002:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1415:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1683:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1679:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1691:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1721:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1733:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1737:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1756:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1760:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1765:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1752:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1768:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1813:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1799:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1355:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1366:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1400:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1406:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:0"
									},
									"scope": 311,
									"src": "1339:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2057:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2095:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2091:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2103:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2148:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2134:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1997:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2008:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2042:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2048:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:0"
									},
									"scope": 311,
									"src": "1981:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2406:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2444:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2440:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2452:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2497:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2501:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2483:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2346:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2357:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2391:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2397:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:0"
									},
									"scope": 311,
									"src": "2330:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2822:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2839:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2832:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2768:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2779:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2813:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:0"
									},
									"scope": 311,
									"src": "2755:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3189:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3206:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3199:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3135:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3146:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3180:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:0"
									},
									"scope": 311,
									"src": "3122:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3532:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3553:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3542:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3478:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3489:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3523:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:0"
									},
									"scope": 311,
									"src": "3465:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3917:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3934:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3938:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3927:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3863:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3874:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:0"
									},
									"scope": 311,
									"src": "3850:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4466:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4483:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4476:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4412:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4423:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:0"
									},
									"scope": 311,
									"src": "4399:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5054:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5096:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5101:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5104:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5138:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5142:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5131:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4972:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4983:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4994:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5045:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:0"
									},
									"scope": 311,
									"src": "4959:201:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5739:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5781:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5788:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5822:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5826:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5815:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5657:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5668:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5679:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5730:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:0"
									},
									"scope": 311,
									"src": "5644:200:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6585:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6627:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6634:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6668:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6672:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6661:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6503:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6514:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6525:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6576:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:0"
									},
									"scope": 311,
									"src": "6490:200:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "482:6210:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:0"
				},
				"id": 0
			},
			"project/MyToken.sol": {
				"ast": {
					"absolutePath": "project/MyToken.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						],
						"SushiToken": [
							639
						]
					},
					"id": 640,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "32:25:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 640,
							"sourceUnit": 312,
							"src": "59:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SushiToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 639,
							"linearizedBaseContracts": [
								639
							],
							"name": "SushiToken",
							"nameLocation": "127:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 317,
									"libraryName": {
										"id": 315,
										"name": "SafeMath",
										"nameLocations": [
											"150:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "150:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "144:27:1",
									"typeName": {
										"id": 316,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "163:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 322,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "192:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 639,
									"src": "177:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 318,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "177:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000_by_1",
											"typeString": "int_const 10000000000000"
										},
										"id": 321,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 319,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "206:2:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"hexValue": "3133",
											"id": 320,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "210:2:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_13_by_1",
												"typeString": "int_const 13"
											},
											"value": "13"
										},
										"src": "206:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000_by_1",
											"typeString": "int_const 10000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "06fdde03",
									"id": 325,
									"mutability": "constant",
									"name": "name",
									"nameLocation": "270:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 639,
									"src": "247:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 323,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "247:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "537573686920546f6b656e",
										"id": 324,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "277:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_ab79d45ba7422fa2e6cf42db98c2c3a865cf79fb438dc3d3d4b03d4b5df9c6a1",
											"typeString": "literal_string \"Sushi Token\""
										},
										"value": "Sushi Token"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "313ce567",
									"id": 328,
									"mutability": "constant",
									"name": "decimals",
									"nameLocation": "339:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 639,
									"src": "317:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 326,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "317:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 327,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "350:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "95d89b41",
									"id": 331,
									"mutability": "constant",
									"name": "symbol",
									"nameLocation": "405:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 639,
									"src": "382:39:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 329,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "382:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "5355534849",
										"id": 330,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "414:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_bbf304add43db0a05d104474683215530b076be1dfdf72a4d53a1e443d8e4c21",
											"typeString": "literal_string \"SUSHI\""
										},
										"value": "SUSHI"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 335,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "488:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 639,
									"src": "451:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 334,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 332,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "460:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "451:28:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 333,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "471:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 339,
									"mutability": "mutable",
									"name": "isHolder",
									"nameLocation": "618:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 639,
									"src": "584:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 338,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 336,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "593:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "584:25:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 337,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "604:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 342,
									"mutability": "mutable",
									"name": "addresses",
									"nameLocation": "650:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 639,
									"src": "632:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 340,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "632:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 341,
										"nodeType": "ArrayTypeName",
										"src": "632:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "680:185:1",
										"statements": [
											{
												"expression": {
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 345,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "691:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 348,
														"indexExpression": {
															"expression": {
																"id": 346,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "700:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "704:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "700:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "691:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 349,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "714:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "691:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 351,
												"nodeType": "ExpressionStatement",
												"src": "691:34:1"
											},
											{
												"expression": {
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 352,
															"name": "isHolder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "735:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 355,
														"indexExpression": {
															"expression": {
																"id": 353,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "744:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "748:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "744:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "735:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "758:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "735:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "735:27:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 362,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "787:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "791:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "787:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 359,
															"name": "addresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "772:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "782:4:1",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "772:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "772:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "772:26:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "830:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 368,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "822:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 367,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "822:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "822:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 371,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "834:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "838:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "834:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 373,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "846:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 366,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "813:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 375,
												"nodeType": "EmitStatement",
												"src": "808:50:1"
											}
										]
									},
									"id": 377,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "677:2:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "680:0:1"
									},
									"scope": 639,
									"src": "666:199:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "972:41:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 384,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "989:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 386,
													"indexExpression": {
														"id": 385,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "998:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "989:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 383,
												"id": 387,
												"nodeType": "Return",
												"src": "982:24:1"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "915:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "933:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "925:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "924:17:1"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "963:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "963:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:9:1"
									},
									"scope": 639,
									"src": "906:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "1124:409:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 399,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "1142:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1160:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1152:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 400,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1152:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1152:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1142:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642073656e6465722061646472657373",
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1164:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c845f72fb5ceabb4d59b1044b79383c237f22ad0b30dc4f9927ab91356d3d20f",
																"typeString": "literal_string \"Invalid sender address\""
															},
															"value": "Invalid sender address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c845f72fb5ceabb4d59b1044b79383c237f22ad0b30dc4f9927ab91356d3d20f",
																"typeString": "literal_string \"Invalid sender address\""
															}
														],
														"id": 398,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1134:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1134:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "1134:55:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 409,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "1207:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1228:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1220:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 410,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1220:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1220:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1207:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726563697069656e742061646472657373",
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1232:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
																"typeString": "literal_string \"Invalid recipient address\""
															},
															"value": "Invalid recipient address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
																"typeString": "literal_string \"Invalid recipient address\""
															}
														],
														"id": 408,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1199:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1199:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "1199:61:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 419,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "1278:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 421,
																"indexExpression": {
																	"id": 420,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 391,
																	"src": "1287:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1278:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 422,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "1298:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1278:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1306:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 418,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1270:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1270:59:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "1270:59:1"
											},
											{
												"expression": {
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 427,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "1365:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 429,
														"indexExpression": {
															"id": 428,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "1374:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1365:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 434,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "1405:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 430,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "1384:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 432,
																"indexExpression": {
																	"id": 431,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 391,
																	"src": "1393:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1384:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1401:3:1",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "1384:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1384:28:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1365:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "1365:47:1"
											},
											{
												"expression": {
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 438,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "1422:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 440,
														"indexExpression": {
															"id": 439,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "1431:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1422:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 445,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "1468:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 441,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "1444:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 443,
																"indexExpression": {
																	"id": 442,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "1453:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1444:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1464:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "1444:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1444:31:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1422:53:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 448,
												"nodeType": "ExpressionStatement",
												"src": "1422:53:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 450,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "1500:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 451,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "1508:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 452,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "1519:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 449,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "1491:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1491:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 454,
												"nodeType": "EmitStatement",
												"src": "1486:40:1"
											}
										]
									},
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1056:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1073:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "1065:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1065:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1089:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "1081:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1081:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1108:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "1100:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1064:51:1"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1124:0:1"
									},
									"scope": 639,
									"src": "1047:486:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "1660:676:1",
										"statements": [
											{
												"assignments": [
													460,
													462
												],
												"declarations": [
													{
														"constant": false,
														"id": 460,
														"mutability": "mutable",
														"name": "top",
														"nameLocation": "1679:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 534,
														"src": "1671:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 459,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1671:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 462,
														"mutability": "mutable",
														"name": "lowest",
														"nameLocation": "1692:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 534,
														"src": "1684:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 461,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1684:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 465,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 463,
														"name": "findTopAndLowestHolders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "1702:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$_t_address_$",
															"typeString": "function () view returns (address,address)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1702:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
														"typeString": "tuple(address,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1670:57:1"
											},
											{
												"assignments": [
													467
												],
												"declarations": [
													{
														"constant": false,
														"id": 467,
														"mutability": "mutable",
														"name": "topBalance",
														"nameLocation": "1745:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 534,
														"src": "1737:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 466,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1737:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 471,
												"initialValue": {
													"baseExpression": {
														"id": 468,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "1758:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 470,
													"indexExpression": {
														"id": 469,
														"name": "top",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "1767:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1758:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1737:34:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 473,
																"name": "topBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "1789:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1802:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1789:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e7320746f20737465616c2066726f6d20746f7020686f6c646572",
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1805:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1fe84a216921d591bc65562541187346421d15d084c4db140a9b25a310deb0f4",
																"typeString": "literal_string \"No tokens to steal from top holder\""
															},
															"value": "No tokens to steal from top holder"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1fe84a216921d591bc65562541187346421d15d084c4db140a9b25a310deb0f4",
																"typeString": "literal_string \"No tokens to steal from top holder\""
															}
														],
														"id": 472,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1781:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1781:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "1781:61:1"
											},
											{
												"assignments": [
													480
												],
												"declarations": [
													{
														"constant": false,
														"id": 480,
														"mutability": "mutable",
														"name": "lowestBalance",
														"nameLocation": "1860:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 534,
														"src": "1852:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 479,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1852:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 484,
												"initialValue": {
													"baseExpression": {
														"id": 481,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "1876:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 483,
													"indexExpression": {
														"id": 482,
														"name": "lowest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "1885:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1876:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1852:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 486,
																"name": "lowestBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "1910:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1926:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1910:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e7320746f20737465616c2066726f6d206c6f7765737420686f6c646572",
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1929:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_06b580f149ea53acfb705529974e2939ecc187f521fc291a73b1b28e523f4804",
																"typeString": "literal_string \"No tokens to steal from lowest holder\""
															},
															"value": "No tokens to steal from lowest holder"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_06b580f149ea53acfb705529974e2939ecc187f521fc291a73b1b28e523f4804",
																"typeString": "literal_string \"No tokens to steal from lowest holder\""
															}
														],
														"id": 485,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1902:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1902:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "1902:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 493,
																"name": "lowestBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "1987:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 494,
																"name": "topBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "2003:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1987:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6f776573742062616c616e6365206973206e6f74206c657373207468616e20746f702062616c616e6365",
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2015:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_575628dea368647ba253efd2c10d4b50c2c82c9ce583c6699f6b9a64c8dff116",
																"typeString": "literal_string \"Lowest balance is not less than top balance\""
															},
															"value": "Lowest balance is not less than top balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_575628dea368647ba253efd2c10d4b50c2c82c9ce583c6699f6b9a64c8dff116",
																"typeString": "literal_string \"Lowest balance is not less than top balance\""
															}
														],
														"id": 492,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1979:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1979:82:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "1979:82:1"
											},
											{
												"assignments": [
													500
												],
												"declarations": [
													{
														"constant": false,
														"id": 500,
														"mutability": "mutable",
														"name": "amountToSteal",
														"nameLocation": "2080:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 534,
														"src": "2072:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 499,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2072:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 505,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3130",
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2111:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															}
														],
														"expression": {
															"id": 501,
															"name": "topBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "2096:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2107:3:1",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "2096:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2096:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2072:42:1"
											},
											{
												"expression": {
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 506,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "2165:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 508,
														"indexExpression": {
															"id": 507,
															"name": "top",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "2174:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2165:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 513,
																"name": "amountToSteal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 500,
																"src": "2199:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 509,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "2181:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 511,
																"indexExpression": {
																	"id": 510,
																	"name": "top",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 460,
																	"src": "2190:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2181:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2195:3:1",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "2181:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2181:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2165:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "2165:48:1"
											},
											{
												"expression": {
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 517,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "2223:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 519,
														"indexExpression": {
															"id": 518,
															"name": "lowest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "2232:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 524,
																"name": "amountToSteal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 500,
																"src": "2263:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 520,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "2242:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 522,
																"indexExpression": {
																	"id": 521,
																	"name": "lowest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "2251:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2242:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2259:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "2242:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2242:35:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2223:54:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "2223:54:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 529,
															"name": "top",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "2302:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 530,
															"name": "lowest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "2307:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "amountToSteal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "2315:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 528,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "2293:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2293:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "EmitStatement",
												"src": "2288:41:1"
											}
										]
									},
									"functionSelector": "8a8756ae",
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stealFromTopAndLowest",
									"nameLocation": "1629:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1650:2:1"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1660:0:1"
									},
									"scope": 639,
									"src": "1620:716:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "2528:603:1",
										"statements": [
											{
												"expression": {
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 542,
														"name": "topHolder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "2538:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 543,
															"name": "addresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2550:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 545,
														"indexExpression": {
															"hexValue": "30",
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2560:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2550:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2538:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "2538:24:1"
											},
											{
												"expression": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 548,
														"name": "lowestHolder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "2572:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 549,
															"name": "addresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2587:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 551,
														"indexExpression": {
															"hexValue": "30",
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2597:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2587:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2572:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "2572:27:1"
											},
											{
												"assignments": [
													555
												],
												"declarations": [
													{
														"constant": false,
														"id": 555,
														"mutability": "mutable",
														"name": "highestBalance",
														"nameLocation": "2617:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "2609:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 554,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2609:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 561,
												"initialValue": {
													"baseExpression": {
														"id": 556,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "2634:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 560,
													"indexExpression": {
														"baseExpression": {
															"id": 557,
															"name": "addresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2643:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 559,
														"indexExpression": {
															"hexValue": "30",
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2653:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2643:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2634:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2609:47:1"
											},
											{
												"assignments": [
													563
												],
												"declarations": [
													{
														"constant": false,
														"id": 563,
														"mutability": "mutable",
														"name": "lowestBalance",
														"nameLocation": "2674:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "2666:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 562,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2666:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 569,
												"initialValue": {
													"baseExpression": {
														"id": 564,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "2690:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 568,
													"indexExpression": {
														"baseExpression": {
															"id": 565,
															"name": "addresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2699:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 567,
														"indexExpression": {
															"hexValue": "30",
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2709:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2699:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2690:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2666:46:1"
											},
											{
												"body": {
													"id": 627,
													"nodeType": "Block",
													"src": "2769:356:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 581,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 335,
																		"src": "2787:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 585,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 582,
																			"name": "addresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "2796:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 584,
																		"indexExpression": {
																			"id": 583,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 571,
																			"src": "2806:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2796:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2787:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 586,
																	"name": "highestBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 555,
																	"src": "2812:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2787:39:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 603,
															"nodeType": "IfStatement",
															"src": "2783:159:1",
															"trueBody": {
																"id": 602,
																"nodeType": "Block",
																"src": "2828:114:1",
																"statements": [
																	{
																		"expression": {
																			"id": 592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 588,
																				"name": "topHolder",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "2846:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 589,
																					"name": "addresses",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 342,
																					"src": "2858:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 591,
																				"indexExpression": {
																					"id": 590,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 571,
																					"src": "2868:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2858:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "2846:24:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 593,
																		"nodeType": "ExpressionStatement",
																		"src": "2846:24:1"
																	},
																	{
																		"expression": {
																			"id": 600,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 594,
																				"name": "highestBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 555,
																				"src": "2888:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 595,
																					"name": "balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 335,
																					"src": "2905:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 599,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 596,
																						"name": "addresses",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 342,
																						"src": "2914:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_storage",
																							"typeString": "address[] storage ref"
																						}
																					},
																					"id": 598,
																					"indexExpression": {
																						"id": 597,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 571,
																						"src": "2924:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2914:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2905:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2888:39:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 601,
																		"nodeType": "ExpressionStatement",
																		"src": "2888:39:1"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 604,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 335,
																		"src": "2959:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 608,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 605,
																			"name": "addresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "2968:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 607,
																		"indexExpression": {
																			"id": 606,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 571,
																			"src": "2978:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2968:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2959:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 609,
																	"name": "lowestBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "2984:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2959:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 626,
															"nodeType": "IfStatement",
															"src": "2955:160:1",
															"trueBody": {
																"id": 625,
																"nodeType": "Block",
																"src": "2999:116:1",
																"statements": [
																	{
																		"expression": {
																			"id": 615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 611,
																				"name": "lowestHolder",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 540,
																				"src": "3017:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 612,
																					"name": "addresses",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 342,
																					"src": "3032:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 614,
																				"indexExpression": {
																					"id": 613,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 571,
																					"src": "3042:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3032:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "3017:27:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 616,
																		"nodeType": "ExpressionStatement",
																		"src": "3017:27:1"
																	},
																	{
																		"expression": {
																			"id": 623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 617,
																				"name": "lowestBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 563,
																				"src": "3062:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 618,
																					"name": "balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 335,
																					"src": "3078:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 622,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 619,
																						"name": "addresses",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 342,
																						"src": "3087:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_storage",
																							"typeString": "address[] storage ref"
																						}
																					},
																					"id": 621,
																					"indexExpression": {
																						"id": 620,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 571,
																						"src": "3097:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3087:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3078:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3062:38:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 624,
																		"nodeType": "ExpressionStatement",
																		"src": "3062:38:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 574,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 571,
														"src": "2742:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 575,
															"name": "addresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2746:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2756:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2746:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2742:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"initializationExpression": {
													"assignments": [
														571
													],
													"declarations": [
														{
															"constant": false,
															"id": 571,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2735:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 628,
															"src": "2727:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 570,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2727:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 573,
													"initialValue": {
														"hexValue": "31",
														"id": 572,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2739:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2727:13:1"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2764:3:1",
														"subExpression": {
															"id": 578,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "2764:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 580,
													"nodeType": "ExpressionStatement",
													"src": "2764:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2722:403:1"
											}
										]
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findTopAndLowestHolders",
									"nameLocation": "2438:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2461:2:1"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "topHolder",
												"nameLocation": "2495:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "2487:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "lowestHolder",
												"nameLocation": "2514:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "2506:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:41:1"
									},
									"scope": 639,
									"src": "2429:702:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 638,
									"name": "Transfer",
									"nameLocation": "3143:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3168:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3152:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3152:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3190:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3174:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3174:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3202:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3194:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3151:57:1"
									},
									"src": "3137:72:1"
								}
							],
							"scope": 640,
							"src": "118:3093:1",
							"usedErrors": [],
							"usedEvents": [
								638
							]
						}
					],
					"src": "32:3180:1"
				},
				"id": 1
			}
		}
	}
}